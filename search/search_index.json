{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Overview","text":"<p>This Wiki is stored in the GitHub repository  dreknix/wiki and can be found on GitHub pages.</p>"},{"location":"tags.html","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags.html#homeassistant","title":"HomeAssistant","text":"<ul> <li>Home Assistent</li> <li>Devices</li> <li>Videos</li> </ul>"},{"location":"tags.html#proxmox","title":"Proxmox","text":"<ul> <li>Proxmox</li> <li>Terminal Access</li> </ul>"},{"location":"tags.html#truenas","title":"TrueNAS","text":"<ul> <li>TrueNAS</li> </ul>"},{"location":"tags.html#ubuntu","title":"Ubuntu","text":"<ul> <li>Advanced Package Tool (apt)</li> <li>Ubuntu</li> </ul>"},{"location":"tags.html#windows","title":"Windows","text":"<ul> <li>Windows</li> <li>Windows - Tools</li> <li>winget</li> <li>Windows Terminal</li> </ul>"},{"location":"tags.html#yaml","title":"YAML","text":"<ul> <li>YAML and bash</li> </ul>"},{"location":"tags.html#bash","title":"bash","text":"<ul> <li>bash</li> <li>YAML and bash</li> </ul>"},{"location":"tags.html#tmux","title":"tmux","text":"<ul> <li>tmux</li> </ul>"},{"location":"blog/index.html","title":"Blog","text":"<p>The  RSS feed of the blog is created by the MkDocs RSS plugin.</p>"},{"location":"blog/index.html#articles","title":"Articles","text":""},{"location":"blog/2023/11/21/enable-gx-in-nvchad.html","title":"Enable <code>gx</code> in NvChad","text":"<p>The command <code>gx</code> opens the filename under the the cursor with <code>vim.ui.open()</code> (see <code>:help netrw-gx</code>). Then handling is provided by the internal <code>netrw</code> plugin. This plugin is disabled when using NvChad.</p> <p>NvChad is using  nvim-tree/nvim-tree.lua. In the configuration of this plugin, NvChad disables <code>netrw</code>, but allows the usage of <code>netrw</code> by the hijacking setup option (see <code>lua/plugins/configs/nvimtree.lua</code>).</p> <p>This options will allow the usage of <code>gx</code>. But NvChad also disables the plugin in the configuration of the plugin manager  folke/lazy.nvim. The <code>netrw</code> plugin is disabled with the option <code>performance.rtp.disabled_plugins</code> in the file <code>plugins/configs/lazy_nvim.lua</code>.</p> <p>To enable the <code>gx</code> command the entry <code>netrwPlugin</code> must be removed from this option. But the configuration mechanism in NvChad allows only to overwrite an option. Therefore the most straightforward way is to overwrite the option with the complete list without <code>netrwPlugin</code> in <code>custom/chadrc.lua</code>:</p> chadrc.lua<pre><code>local M = {}\nM.lazy_vim = {\n  performance = {\n    rtp = {\n      disabled_plugins = {\n        \"2html_plugin\",\n        ...\n        \"ftplugin\",\n      }\n    }\n  }\n}\nreturn M\n</code></pre> <p>The drawback of this method is, that whenever the NvChad configuration is changed, this list must be updated.</p> <p>The better solution is to load the list and remove the favored plugins:</p> chadrc.lua<pre><code>local M = {}\n-- load default list of disabled plugins in NvChad\nlocal default = require('plugins.configs.lazy_nvim')\nlocal default_disabled_plugins = default.performance.rtp.disabled_plugins\n\n-- specify which plugins should be removed from default disabled list\nlocal enabled = {\n  netrwPlugin = true,\n}\n-- enable those plugins\nlocal i=1\nwhile i &lt;= #default_disabled_plugins do\n    if enabled[default_disabled_plugins[i]] then\n        table.remove(default_disabled_plugins, i)\n    else\n        i = i + 1\n    end\nend\n\nM.lazy_nvim = {\n  performance = {\n    rtp = {\n      disabled_plugins = default_disabled_plugins,\n    },\n  },\n}\nreturn M\n</code></pre> <p>Info</p> <p>When you only want to use the <code>gx</code> command, there are other solutions like using a separate plugin, e.g.,  chrishrb/gx.nvim. This is also an example, how to overwrite configuration settings by removing an option in NvChad.</p> <p>Tip</p> <p>A table can be printed with the following commands:</p> <pre><code>print(vim.inspect(require('plugins.configs.lazy_nvim')))\nprint(vim.inspect(default_disabled_plugins))\n</code></pre>"},{"location":"blog/2023/11/20/finding-glyph-in-fonts.html","title":"Finding Glyph in Fonts","text":"<p>Sometimes it is necessary to find fonts that contain a specific glyph. The tool albatross can be used for that task.</p> <p>Finding a font by providing the glyph Snowman Emoji:</p> <pre><code>albatross \u2603\n</code></pre> <p>Finding a font by providing the code of the glyph in multiset union notation:</p> <pre><code>albatross U+2603\n</code></pre> <p>A detailed description of all options can be found in the CTAN package documentation or albatross(1).</p> <p>Possible Unicode characters and their code point can be searched on symbl.cc.</p> <p>Info</p> <p>On Debian or Ubuntu the tool is part of the package <code>texlive-font-utils</code>. The command is not available. Instead the following command can be used:</p> <pre><code>java -jar /usr/share/texlive/texmf-dist/scripts/albatross/albatross.jar 0x2603\n</code></pre>"},{"location":"blog/2023/11/20/imap-based-authentication-in-php.html","title":"IMAP-based Authentication in PHP","text":"<p>When using IMAP-based user authentication in applications written in PHP (i.e. Nextcloud, DokuWiki, etc.), debugging with a test script is essential. The idea of using <code>curl</code> for authentication, is based on the external user authentication plugin (see:  nextcloud/user_external) of Nextcloud.</p> imap-test.php<pre><code>#!/usr/bin/env php\n&lt;?php\n$version = phpversion();\nprint(\"Current PHP version: {$version}\\n\");\n\n$url = 'imaps://imap.example.org:993';\n$email = 'user@example.org';\n$password = 'password'; # password must be in '...'\n\n$ch = curl_init();\n\n# see: https://www.php.net/manual/en/function.curl-setopt.php\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_USERPWD, \"{$email}:{$password}\");\ncurl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);\n\n# equal to: curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'CAPABILITY');\ncurl_setopt($ch, CURLOPT_CONNECT_ONLY, true);\n\n# get more debug information\ncurl_setopt($ch, CURLOPT_CERTINFO, true);\ncurl_setopt($ch, CURLOPT_VERBOSE, true);\n\nprint(\"Connecting to: {$url}\\n\");\ncurl_exec($ch);\n\n$errorcode = curl_errno($ch);\n\nif ($errorcode === 0) {\n  print(\"OK\\n\");\n} else if ($errorcode === 67) {\n  print(\"ERROR(\" . $errorcode . \"): Login denied! Wrong credentials?\\n\");\n} else {\n  print(\"ERROR(\" . $errorcode . \"): \" . curl_error($ch) . \"\\n\");\n}\n?&gt;\n</code></pre> <p>Tip</p> <p>It is important to use the same PHP version for testing, as used for the application. To ensure the correct version Docker/Podman can be used.</p> <pre><code>docker run -it --rm \\\n           --name php-test \\\n           -v \"./imap-test.php:/work/imap-test.php\" \\\n           -w /work php:8.2-cli \\\n           php imap-test.php\n</code></pre>"},{"location":"blog/2023/12/04/qemu-and-windows-keys.html","title":"QEMU and Windows Keys","text":"<p>OEM Windows keys are often stored in the software licensing (SLIC) or Microsoft data management (MSDM) table. When a key is stored the unattended installation can use a generic key and the stored key is than used and activated. The usage of such a key can be tested with QEMU/libvirt.</p> <p>The SLIC or MSDM table can be read via the Advanced Configuration and Power Interface (ACPI) in Linux. To read the Windows license key the following command can be used:</p> <pre><code>egrep -ao '[[:alnum:]-]{29}' /sys/firmware/acpi/tables/MSDM\n</code></pre> <p>Under Windows the following PowerShell snippet can be used to extract the license key:</p> <pre><code>Get-CimInstance -query 'select * from SoftwareLicensingService'\n</code></pre> <p>The key is stored in the <code>OA3xOriginalProductKey</code> attribute.</p> <p>The table file needs to be stored in <code>/usr/share/seabios/</code> due to AppArmor. If the file is not stored in this directory, a permission denied error is thrown. The MSDM (or SLIC) table is included by using additional QEMU parameters:</p> <pre><code>&lt;qemu:commandline&gt;\n  &lt;qemu:arg value='-acpitable'/&gt;\n  &lt;qemu:arg value='file=/usr/share/seabios/MSDM'/&gt;\n&lt;/qemu:commandline&gt;\n</code></pre> <p>In order to \"simulate\" the OEM hardware the system management BIOS (SMBIOS) can be used:</p> <pre><code>&lt;qemu:commandline&gt;\n&lt;qemu:arg value='-smbios'/&gt;\n&lt;qemu:arg value='type=0,version=??,date=??'/&gt;\n&lt;qemu:arg value='-smbios'/&gt;\n&lt;qemu:arg value='type=1,manufacturer=??,product=??,version=??,serial=??,uuid=??,sku=??,family=??'/&gt;\n</code></pre> <p>The concrete values can be extracted with the <code>dmidecode</code> tool:</p> <pre><code>dmidecode -t 0\ndmidecode -t 1\n</code></pre> <p>The embedded license key can be activated with the following commands. First the key is read from the SLIC or MSDM table and than stored in Windows. The last command activates the license key:</p> <pre><code>$key = (Get-CimInstance -query 'select * from SoftwareLicensingService').OA3xOriginalProductKey\ncscript.exe \"$env:SystemRoot\\System32\\slmgr.vbs\" /ipk \"$key\"\ncscript.exe \"$env:SystemRoot\\System32\\slmgr.vbs\" /ato\n</code></pre>"},{"location":"blog/2023/11/22/using-spice-with-truenas-scale-cobia-2310.html","title":"Using SPICE with TrueNAS Scale Cobia (23.10)","text":"<p>TrueNAS Scale Cobia (23.10) disabled the option to access VM displays via VNC. The connection method is changed to SPICE.</p> <p>There are many different clients, which support Spice. Under Debian the tool  Remmina is available that is a GTK-based remote desktop client. This tool supports many different protocols: RDP, VNC, SPICE, X2Go, SSH, etc. Some of the protocols, i.e. SPICE, are only available via additional plugins.</p> <p>To install Remina with the SPICE plugin (the RDP and VNC plugins are installed by default):</p> <pre><code>sudo apt install remmina remmina-plugin-spice\n</code></pre> <p>When Remina is installed, you can connect to the server via the SPICE protocol:</p> <pre><code>remmina spice://server.example.org\n</code></pre> <p>If multiple VMs are running the different ports can be found in the details of the display device.</p> <p>Tip</p> <p>If a VM was created before version 23.10 the display of the VM must be deleted and newly created. Since version 23.10 only the SPICE protocol is available and password, which protects the connection, must be set.</p> <p>Sometimes the VM must use UEFI in order to work properly with the SPICE protocol.</p>"},{"location":"blog/2023/11/20/using-tex-files-in-vi.html","title":"Using TeX files in Vi","text":"<p>In Vim/Neovim the filetype plugin uses three different type for different TeX flavors (see <code>:help ft-tex-plugin</code>).</p> <ul> <li>TeX: <code>plaintex</code></li> <li>LaTeX: <code>tex</code></li> <li>ConTeXt: <code>context</code></li> </ul> <p>Which filetype the current buffer was assigned, can be shown with <code>:set filetype?</code> (or <code>:LspInfo</code> if LSP is enabled).</p> <p>All files with the extension <code>*.tex</code> are of type <code>plaintex</code>. When the file type plugin finds specific keywords the file type is than changed to <code>tex</code> or <code>context</code>.</p> <p>The automatic guessing can be disabled with the following two mechanisms.</p> <p>Add the TeX flavor in the first line of a <code>*.tex</code> file:</p> <pre><code>%&amp;latex\n</code></pre> <p>Or set the global variable <code>tex_flavor</code>:</p> VimNeovim <pre><code>let g:tex_flavour = \"latex\"\n</code></pre> <pre><code>vim.g.tex_flavor = 'latex'\n</code></pre> <p>See <code>:help lua-guide-variables</code> for more information about the Lua wrappers for different variable scopes.</p>"},{"location":"blog/2023/12/11/zram-and-swap.html","title":"zram and Swap","text":"<p>The zram kernel module creates compressed RAM-based block devices named <code>/dev/zramX</code>. These zram devices allow fast I/O and the compression provides RAM space savings.</p>"},{"location":"blog/2023/12/11/zram-and-swap.html#install-zram","title":"Install zram","text":"<p>Install zram in Debian:</p> <pre><code>sudo apt install zram-tools\n</code></pre> <p>In order to enable zram, the computer needs to be rebooted.</p>"},{"location":"blog/2023/12/11/zram-and-swap.html#configure-zram","title":"Configure zram","text":"<p>The status of the zram module can be queried with <code>systemctl status zramswap.service</code>. The configuration and usage can be shown with <code>zramctl</code>:</p> <pre><code>$ sudo zramctl\nNAME       ALGORITHM DISKSIZE DATA COMPR TOTAL STREAMS MOUNTPOINT\n/dev/zram0 lz4           256M   4K   63B   20K       8 [SWAP]\n</code></pre> <p>Change the configuration parameters by editing the file <code>/etc/default/zramswap</code>:</p> <pre><code>ALGO=zstd\nPERCENT=25\n</code></pre> <p>The will change the default compression algorithm from <code>lz4</code> to <code>zstd</code> and the default size from <code>256 MiB</code> to <code>25 %</code> of the total RAM. The changes are only visible after rebooting the computer.</p> <pre><code>$ sudo zramctl\nNAME       ALGORITHM DISKSIZE DATA COMPR TOTAL STREAMS MOUNTPOINT\n/dev/zram0 zstd          7.8G   4K   59B   20K       8 [SWAP]\n</code></pre> <p>If the computer has a configured swap file or swap partition, the zram swap gets a higher priority (<code>100</code>) instead of the default of <code>-2</code>:</p> <pre><code>$ sudo swapon\nNAME       TYPE      SIZE USED PRIO\n/dev/dm-2  partition   4G   0B   -2\n/dev/zram0 partition 7.8G   0B  100\n</code></pre> <p>When the computer uses suspend to disk, a swap file or swap partition is needed besides zram.</p>"},{"location":"ha/index.html","title":"Home Assistent","text":"","tags":["HomeAssistant"]},{"location":"ha/index.html#first-steps","title":"First Steps","text":"<p>TODO: see video</p> <ul> <li>Advanced settings</li> <li>vscode</li> <li>Advanced SSH &amp; Web Terminal</li> </ul>","tags":["HomeAssistant"]},{"location":"ha/devices.html","title":"Devices","text":"","tags":["HomeAssistant"]},{"location":"ha/devices.html#shelly-plug-s","title":"Shelly Plug S","text":"<p>Shelly Plug S can be used with the Tasmota firmware.</p> <p>Connect to Wifi SSID of Shelly Plug S and connect to web interface http://192.168.33.1/ and configure local wifi network.</p> <p>Install the firmware:</p> <pre><code>http://shellyip/ota?url=http://ota.tasmota.com/tasmota/shelly/mg2tasmota-ShellyPlugS.zip\n</code></pre> <p>Connect to Tasmota Wifi SSID and configure the plug. After that open the URL <code>http://shellyip/</code>.</p> <p>Configure template (<code>Configure</code> &gt; <code>Configure Other</code>):</p> <pre><code>{\"NAME\":\"Shelly Plug S\",\"GPIO\":[57,255,56,255,0,134,0,0,131,17,132,21,0],\"FLAG\":2,\"BASE\":45}\n</code></pre> <p>Configure device (<code>Configure</code> &gt; <code>Configure Module</code>):</p> <pre><code>BlitzWolf SHP (45)\n</code></pre> <p>Configure MQTT (<code>Configure</code> &gt; <code>Configure MQTT</code>:</p> <ul> <li>Host: //IP address of Home Assistant//</li> <li>User: //user in Home Assistant//</li> <li>Password: //user in Home Assistant//</li> </ul> <p>Calibrate the device (with readings of 235V and 35W):</p> <pre><code>savedata 1\nVoltageSet 235\nPowerSet 35.0\nsavedata 0\n</code></pre> <p>The information can be found in this video.</p>","tags":["HomeAssistant"]},{"location":"ha/videos.html","title":"Videos","text":"","tags":["HomeAssistant"]},{"location":"ha/videos.html#first-steps","title":"First Steps","text":"<ul> <li>15 Home Assistant Tips You MUST Do</li> </ul>","tags":["HomeAssistant"]},{"location":"ha/videos.html#templates","title":"Templates","text":"<ul> <li>Home Assistant Template Sensoren und Hilfsentita\u0308ten (Helfer) 101</li> <li>Home Assistant Berechnungen Grundlagen</li> <li>Solaranlagen Ersparnis mit Home Assistant tracken &amp; berechnen</li> </ul>","tags":["HomeAssistant"]},{"location":"hardware/index.html","title":"Hardware","text":"<ul> <li>Lenovo ThinkPad</li> <li>NUC11ATKC4 - Celeron N5105</li> <li>Framework 13 - Ryzen 7 7840U</li> </ul>"},{"location":"hardware/framework.html","title":"Framework 13 AMD","text":"<p>Framework 13 AMD</p> <ul> <li>AMD Ryzen 7 7840U</li> <li>AMD Radeon 780M Graphics</li> <li>DDR5-5600 - 32GB (2 x 16GB)</li> <li>WD Black SN850X 2TB</li> <li>MEDIATEK MT7922 802.11ax Wireless Network Adapter</li> </ul>"},{"location":"hardware/framework.html#debian-13-trixie-testing","title":"Debian 13 trixie (testing)","text":"<p>Basic installation from network installer (netisnt) ISO image with disk encryption and <code>btrfs</code> flat volume layout.</p> <p>After the first reboot tweak the fresh installation.</p>"},{"location":"hardware/framework.html#install-missing-firmware","title":"Install Missing Firmware","text":""},{"location":"hardware/framework.html#mediatek-mt7922","title":"MEDIATEK MT7922","text":"<p>Install <code>mt7921e</code> for MEDIATEK MT7922 802.11ax Wireless Network Adapter:</p> <pre><code>sudo apt install firmware-misc-nonfree\n</code></pre>"},{"location":"hardware/framework.html#amd-radeon-780m","title":"AMD Radeon 780M","text":"<p>The package <code>firmware-amd-graphics</code> must not be installed:</p> <pre><code>sudo apt purge firmware-amd-graphics\n</code></pre> <p>Downloading specific firmware is described in the Debian Wiki.</p> <pre><code>mkdir firmware\ncd firmware/\nwget -r \\\n     -nd \\\n     -e robots=no \\\n     -A '*.bin' \\\n     --accept-regex '/plain/' \\\n     https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/tree/amdgpu/\nsudo mkdir /lib/firmware/amdgpu/\nsudo mv *.bin /lib/firmware/amdgpu/\nsudo update-initramfs -c -k all\n</code></pre>"},{"location":"hardware/lenovo.html","title":"Lenovo ThinkPad","text":""},{"location":"hardware/lenovo.html#firmware-update","title":"Firmware Update","text":"<p>Download boot ISO image from Lenovo support.</p> <p>Extract image from ISO:</p> <pre><code>$ geteltorito -o e480.img ~/Downloads/r0puj37wd.iso\n</code></pre> <p>Get the device of the USB stick with <code>lsblk</code>. And write the image to the USB stick.</p> <pre><code>$ sudo dd if=e480.img of=/dev/sdb bs=64K\n</code></pre>"},{"location":"hardware/nuc11atkc4.html","title":"NUC 11 Essential Kit","text":"<ul> <li>NUC 11 Essential Kit - NUC11ATKC4</li> <li>Support<ul> <li>Getting Started</li> <li>Support Site</li> <li>All Downloads</li> </ul> </li> </ul>"},{"location":"hardware/nuc11atkc4.html#boot","title":"Boot","text":"<ul> <li>F2 - Enter setup</li> <li>F7 - Update BIOS<ul> <li>ATJSLCPX - Version 37</li> </ul> </li> <li>F10 - Boot menu</li> <li>F12 - Network boot</li> </ul>"},{"location":"hardware/nuc11atkc4.html#debian-11-bullseye","title":"Debian 11 - bullseye","text":""},{"location":"hardware/nuc11atkc4.html#firmware","title":"Firmware","text":"<p>The following package must be installed:</p> <ul> <li><code>firmware-linux-nonfree</code></li> <li><code>firmware-realtek</code></li> <li><code>firmware-iwlwifi</code></li> </ul> <pre><code>$ sudo apt install firmware-linux-nonfree firmware-realtek firmware-iwlwifi\n</code></pre>"},{"location":"hardware/nuc11atkc4.html#luks-dropbear","title":"LUKS - Dropbear","text":"<pre><code>$ sudo apt install dropbear-initramfs\n</code></pre> <p>Create <code>/etc/dropbear-initramfs/authorized_keys</code> and update the initramfs.</p> <pre><code>$ sudo update-initramfs -u\n</code></pre> <p>Unlock the LUKS encryption: <code>cryptroot-unlook</code></p>"},{"location":"hardware/nuc11atkc4.html#dmidecode","title":"dmidecode","text":"<pre><code>$ sudo dmidecode -s system-product-name\nNUC11ATKC4\n$ sudo dmidecode -s system-serial-number\nXXXXXXXXXXXX\n$ sudo dmidecode -s bios-version\nATJSLCPX.0037.2022.0715.1547\n</code></pre>"},{"location":"tools/container/debugging.html","title":"Debugging Slim Containers","text":"<p>In order to debug a slim or distroless container the Nixery can be used.</p> <p>Start a simple slim container:</p> <pre><code>$ docker run --rm -p 8080:80 --name slim-container traefik/whoami\n</code></pre> <p>Attach a debug container based on Nixery (with the packages <code>ps</code>, <code>tree</code>, and <code>vim</code>) to the slim container namespaces <code>pid</code> and <code>network</code>.</p> <pre><code>$ docker run \\\n           -it --rm \\\n           --name debugger \\\n           --pid container:slim-container \\\n           --network container:slim-container \\\n           nixery.dev/shell/ps/tree/vim \\\n           bash\n</code></pre> <p>Now the processes of the slim container are visible.</p> <pre><code># ps -e\nUID          PID    PPID  C STIME TTY          TIME CMD\n0              1       0  0 18:28 ?        00:00:00 /whoami\n0             18       0  0 18:29 pts/0    00:00:00 bash\n0             24      18  0 18:30 pts/0    00:00:00 ps -ef\n#\n</code></pre> <p>The filesystem of the slim container is visible under <code>/proc/1/root</code>.</p> <pre><code># ls /proc/1/root\ndev  etc  proc  sys  usr  whoami\n#\n</code></pre> <p>To work directly on the filesystem of the slim container you need to <code>chroot</code> into <code>/proc/1/root</code>. In order to use the tools from the Nixery image the directories <code>/bin</code> and <code>/nix</code> must be accessible from the filesystem of the slim container. This can only be achieved via the <code>/proc</code> filesystem.</p> <pre><code># ln -s /proc/$$/root/bin /proc/1/root/nix-bin\n# ln -s /proc/$$/root/nix /proc/1/root/nix\n# export PATH=${PATH}:/nix-bin\n# chroot /proc/1/root /nix-bin/bash\n</code></pre> <p>Now you can debug a running slim container from within and use every tool you like.</p> <p>Note</p> <p> iximiuz/cdbug</p> <p>A tool for container debugging. Based on the ideas descripted in the blog post \"Docker: How To Debug Distroless And Slim Containers\" from Ivan Velichko</p> <p>Note</p> <p>At DockerCon 2023 <code>docker debug</code> was announced.</p>"},{"location":"tools/container/baseimages/nixery.html","title":"Nixery","text":"<p>Nixery is acontainer image registry that provides small base images with only the packages specified in the URL, separated by slashes.</p> <p>When the first element is <code>shell</code> than the <code>bash</code> and <code>coreutils</code> are part of the image. After that packages from the Nix package manager can be added. Any package available at https://search.nixos.org/packages can be installed.</p> <p>The following command starts a shell in a container based on a Nixery image that contains the <code>coreutils</code> with <code>bash</code> and the packages <code>git</code> and <code>python312</code>.</p> <pre><code>$ docker run -it --rm nixery.dev/shell/git/python312 bash\n</code></pre> <p>Nixery can be used to debug slim containers.</p>"},{"location":"tools/vi/index.html","title":"Vi / Vim / Neovim","text":""},{"location":"tools/vi/index.html#general-informations","title":"General Informations","text":"<p>There are several starting point for informations:</p> <ul> <li>Quick reference guide: <code>:help quickref</code></li> <li>User manual: <code>:help usr_toc</code></li> <li>Reference manual: <code>:help reference_toc</code></li> </ul>"},{"location":"tools/vi/index.html#motions","title":"Motions","text":"<p>See: <code>:help motion</code></p>"},{"location":"tools/vi/index.html#left-right-motions","title":"Left-Right Motions","text":"<p>See: <code>:help left-right-motions</code></p> <ul> <li><code>0</code> - move to first character in current line</li> <li><code>^</code> - move to first non-blank character in current line</li> <li><code>$</code> - move to last character in current line</li> <li><code>f</code><code>char</code> - move to character <code>char</code> to the right<ul> <li><code>cf&gt;</code> - change up to next character <code>&gt;</code> - including match</li> </ul> </li> <li><code>F</code><code>char</code> - move to character <code>char</code> to the left</li> <li><code>t</code><code>char</code> - move to before character <code>char</code> to the right<ul> <li><code>dt)</code> - delete up to next character <code>)</code> - excluding match</li> </ul> </li> <li><code>T</code><code>char</code> - move to after character <code>char</code> to the left</li> <li><code>;</code> - repeat latest <code>f</code>, <code>F</code>, <code>t</code>, <code>T</code> movement</li> <li><code>,</code> - repeat latest <code>f</code>, <code>F</code>, <code>t</code>, <code>T</code> movement in opposite direction</li> </ul>"},{"location":"tools/vi/index.html#up-down-motions","title":"Up-Down Motions","text":"<p>See: <code>:help up-down-motions</code></p> <ul> <li><code>gg</code> - go to first line in file</li> <li><code>G</code> - go to last line in file</li> <li><code>count</code><code>G</code> - go to last <code>count</code> line in file</li> <li><code>count</code><code>go</code> - go to <code>count</code> byte</li> </ul>"},{"location":"tools/vi/index.html#word-motions","title":"Word Motions","text":"<p>See: <code>:help word-motions</code></p> <ul> <li><code>w</code> - word forward</li> <li><code>W</code> - WORDS forward (WORDS are words with special characters)</li> </ul>"},{"location":"tools/vi/index.html#text-object-motions","title":"Text Object Motions","text":"<p>See: <code>:help object-motions</code></p> <ul> <li><code>)</code> - sentence forward</li> <li><code>}</code> - paragraph forward</li> <li><code>]]</code> - section forward</li> </ul>"},{"location":"tools/vi/index.html#text-object-selection","title":"Text Object Selection","text":"<p>See: <code>:help text-objects</code></p> <ul> <li>commands starting with <code>a</code> selects an object with whitespaces</li> <li>commands starting with <code>i</code> selects an inner object without whitespaces</li> <li>objects<ul> <li>quotes: <code>da\"</code> - delete around quotes or <code>da'</code></li> <li>brackets: <code>di]</code> - delete inside brackets</li> <li>braces: <code>ci{</code> - change inside braces</li> <li>paragraph: <code>dap</code> - delete inside paragraph</li> <li>word: <code>vaw</code> - visual select around word</li> <li>WORD: <code>vaW</code> - visual select around WORD</li> <li>tag: <code>vit</code> - visual select inside tag or <code>vi&lt;</code></li> </ul> </li> </ul>"},{"location":"tools/vi/index.html#quickfix","title":"Quickfix","text":"<p>See: <code>:help quickfix</code></p> <p>The quickfix commands are used to work with a list of positions in files. A location list is a window-local quickfix list.</p> <p><code>:vim word **</code> or <code>:vim /pattern/ **</code> searches the word or pattern in all files recursively beneath the current directory. And opens the first location. After that the following commands are working on this quickfix list.</p> <ul> <li><code>:copen</code> - open the quickfix list</li> <li><code>:cfirst</code> / <code>:clast</code> - open the first resp. last location</li> <li><code>:cnext</code> / <code>:cprev</code> - open the next resp. previous location</li> <li><code>:cc4</code> - open the fourth location</li> <li><code>:cclose</code> or <code>:ccl</code> - close the quickfix list</li> <li><code>:colder</code> / <code>:cnewer</code> - open the older resp. newer quickfix list (within the last ten)</li> <li><code>:cdo</code> cmd - execute cmd on each location<ul> <li><code>:cdo s/Foo/Bar/</code> - replace Foo with Bar at each location</li> <li><code>:cdo s/Foo/Bar/ | update</code> - store each buffer after executing the command</li> </ul> </li> <li><code>:cfdo</code> cmd - execute cmd on each file in the quickfix list<ul> <li><code>:cdo bd</code> - close all buffers from the quickfix list</li> </ul> </li> </ul>"},{"location":"tools/vi/index.html#commands-starting-with-g","title":"Commands starting with <code>g</code>","text":"<p>See: <code>:help *g*</code></p> <ul> <li><code>ga</code> - print ASCII value of character under the cursor</li> <li><code>gq</code><code>motion</code> - format text described by <code>motion</code></li> <li><code>gw</code><code>motion</code> - format text described by <code>motion</code> without cursor movement</li> </ul> <p>Jump through or work with changes:</p> <ul> <li><code>g;</code> - jump to last change</li> <li><code>g,</code> - jump forward through the change list</li> <li><code>:changes</code> - show the last 100 changes</li> <li><code>u</code> - undo changes</li> <li><code>&lt;C-r&gt;</code> - redo changes</li> </ul>"},{"location":"tools/vi/index.html#misc","title":"Misc","text":""},{"location":"tools/vi/index.html#search-in-key-mappings","title":"Search in Key Mappings","text":"<p>Besides the plugin Telescope the command <code>:filter</code> allows to search through all available key mappings.</p> <p>Search for key mappings in insert mode:</p> <pre><code>:filter pattern imap\n</code></pre> <p>Search for key mappings in normal mode:</p> <pre><code>:filter pattern imap\n</code></pre> <p>To print the content of a mapping:</p> <pre><code>:verbose map &lt;Leader&gt;x\n</code></pre>"},{"location":"tools/vi/index.html#clear-search-highlight","title":"Clear Search Highlight","text":"<p>With the option <code>:hlsearch</code> all matches of the last search are highlighted. To clear all highlights the command <code>:nohlsearch</code> can be used. Often this command is mapped to <code>C-L</code>. In NeoVim the following default mapping exists:</p> <pre><code>nnoremap &lt;C-L&gt; &lt;Cmd&gt;nohlsearch&lt;Bar&gt;diffupdate&lt;Bar&gt;normal! &lt;C-L&gt;&lt;CR&gt;\n</code></pre>"},{"location":"tools/vi/index.html#indenting-code","title":"Indenting Code","text":"<p>With <code>==</code> or <code>=</code> code can be formatted.</p> <ul> <li><code>==</code> - indent current line<ul> <li><code>&gt;&gt;</code> - increase current indentation level be one</li> <li><code>&lt;&lt;</code> - decrease current indentation level be one</li> </ul> </li> <li><code>4==</code> - indent four lines (including current line)<ul> <li><code>V3j=</code> - same indentation by using visual selection</li> </ul> </li> <li><code>=ap</code> - indent current paragraph</li> <li><code>gg=G</code> - indent whole file</li> <li><code>=%</code> - when cursor is on <code>{</code> or <code>}</code> indent whole code block</li> </ul>"},{"location":"tools/vi/index.html#avoid-wrong-formatting-during-paste","title":"Avoid Wrong Formatting During Paste","text":"<p>Set the configuration <code>:set paste</code> before pasting into Vi. Disable this option afterwards with <code>:set nopaste</code>.</p>"},{"location":"tools/vi/index.html#remove-lines-matching-a-pattern","title":"Remove Lines Matching a Pattern","text":"<ul> <li><code>:g/pattern/d</code> - remove lines that do match the pattern</li> <li><code>:g!/pattern/d</code> - remove lines that do not match the pattern</li> </ul>"},{"location":"tools/vi/index.html#non-greedy-regular-expression","title":"Non-Greedy Regular Expression","text":"<p>See: <code>:help non-greedy</code></p> <pre><code>{\n  \"key1\": \"valueA\",\n  \"key2\": \"valueB\"\n}\n</code></pre> <p>The regular expression <code>\".*\"</code> will select <code>\"key1\": \"valueA\"</code> because it is greedy. It tries to match as many as possible characters.</p> <p>The regular expression <code>\".\\{-\\}\"</code> will select only <code>\"key1\"</code>. It will match the fewest number of characters as possible. The last <code>\\</code> is optional, so the expression <code>\".\\{-}\"</code> is also possible.</p>"},{"location":"tools/vi/vim.html","title":"Vim","text":"<p>mhinz/vim-galore</p>"},{"location":"tools/vi/vim.html#general","title":"General","text":"<pre><code>\" enter current millenium\nset nocompatible\n\n\" enable syntax and plugins (for netrw)\nsyntax enable\nfiletype plugin on\n</code></pre>"},{"location":"tools/vi/vim.html#finding-files","title":"Finding Files","text":"<pre><code>\" search down into subfolders\n\" provides tab-completion for all file-related tasks\nset path+=**\n\n\" ignore different file types\nset wildignore+=*.aux,*.log,*.out,*.pdf,*.o\n\n\" ignore a specific folder\nset wildignore+=**/node_modules/**\n\n\" give suffixes a low priority (list at end)\nset suffixes+=.pdf\n\n\" display all matching files when we tab complete\nset wildmenu\n\n\" Hit tab to :find by partial match\n\" Use * to make it fuzzy\n\n\" :b lets you autocomplete any open buffer\n</code></pre>"},{"location":"tools/vi/vim.html#autocomplete","title":"Autocomplete","text":"<p>More shortcuts can be found in |ins-completion|</p> <pre><code>\" ^x^n - for just this file\n\" ^x^f - for filenames\n\" ^x^] - for tags only\n\" ^n   - for anything by the 'complete' option\n\n\" move than with ^n and ^p in the suggestion list\n</code></pre>"},{"location":"tools/vi/vim.html#spell-checking-and-word-completion","title":"Spell Checking and Word Completion","text":"<pre><code>\" Spell-check language\nset spelllang=en_us\n\n\" Automatically set by plugin vim-markdown\n\"\" Define new filetype markdown\n\"autocmd BufRead,BufNewFile *.md set filetype=markdown\n\n\" Spell-check Markdown files\nautocmd FileType markdown setlocal spell\n\n\" Spell-check Git messages\nautocmd FileType gitcommit setlocal spell\n\n\" Set spellfile to location that is guaranteed to exist,\n\" can be symlinked to Dropbox or kept in Git\n\" and managed outside of thoughtbot/dotfiles using rcm.\nset spellfile=$HOME/.vim/spell-en.utf-8.add\n\n\" Autocomplete with dictionary words when spell check is on\nset complete+=kspell\n</code></pre>"},{"location":"tools/vi/vim.html#file-browsing","title":"File Browsing","text":"<pre><code>\" tweaks for browsing\nlet g:netrw_banner=0        \" disable annoying banner\nlet g:netrw_browse_split=4  \" open in prior window\nlet g:netrw_altv=1          \" open splits to the right\nlet g:netrw_liststyle=3     \" tree view\nlet g:netrw_list_hide=netrw_gitignore#Hide()\nlet g:netrw_list_hide.=',\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'\n\n\" :edit a folder to open a file browser\n\" &lt;CR&gt;/v/t to open in an h-split/v-split/tab\n\" check |netrw-browse-maps| for more mappings\n</code></pre>"},{"location":"tools/vi/vim.html#snippets","title":"Snippets","text":"<pre><code>\" read an empty HTML template and move cursor to title\nnnoremap ,html :-1read $HOME/.vim/.skeleton.html&lt;CR&gt;3jwf&gt;a\n</code></pre>"},{"location":"tools/vi/vim.html#help","title":"Help","text":"<pre><code>:help ^n    \" help about ctrl-n in normal mode\n:help i_^n  \" help about ctrl-n in insert mode\n:help c_^n  \" help about ctrl-n in command mode\n\n\" grep in help pages\n:helpgrep xxx\n</code></pre>"},{"location":"tools/vi/vim.html#colorcolumn","title":"ColorColumn","text":"<pre><code>set textwidth=80\nset colorcolumn=81\nhighlight ColorColumn ctermbg=0 guibg=lightgrey\n\n\" alternativ\nau BufWinEnter * let w:m2=matchadd('ErrorMsg', '\\%&gt;80v.\\+', -1)\n</code></pre>"},{"location":"tools/vi/neovim/index.html","title":"Neovim / NvChad","text":"<p> Neovim is a fork of Vim with builtin support for Language Server Protocol (LSP) and Lua scripting.</p> <p>For Neovim different advanced configurations exists: LazyVim, LunarVim, AstroNvim, NvChad, ... In the following NvChad is used as the bases for the custom configuration.</p> <ul> <li> NvChad/NvChad</li> <li> NvChad/example_config</li> </ul>"},{"location":"tools/vi/neovim/index.html#installupdate","title":"Install/Update","text":"<p>Install (Linux):</p> <pre><code>$ rm -rf ~/.config/nvim\n$ rm -rf ~/.local/share/nvim\n$ git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1\n</code></pre> <p>Install (Windows):</p> <pre><code>PS&gt; rd -r ~\\AppData\\Local\\nvim\nPS&gt; rd -r ~\\AppData\\Local\\nvim-data\nPS&gt; git clone https://github.com/NvChad/NvChad $HOME\\AppData\\Local\\nvim --depth 1\n</code></pre> <p>Update:</p> <pre><code>:NvChadUpdate\n</code></pre>"},{"location":"tools/vi/neovim/index.html#key-mappings-and-commands","title":"Key Mappings and Commands","text":"<p>Note</p> <p>In NvChad the leader key is Space.</p> <ul> <li>change theme: <code>&lt;leader&gt; + th</code></li> <li>cheat sheet: <code>&lt;leader&gt; + ch</code> / <code>:NvCheatsheet</code></li> <li>dash screen: <code>:Nvdash</code></li> <li>file tree: <code>:NvimTreeOpen</code> / <code>&lt;leader&gt; + e</code></li> <li>searchable keymaps: <code>:Telescope keymaps</code></li> <li>list of LSP packages: <code>:Mason</code></li> <li>install all configured LSP packages: <code>:MasonInstallAll</code></li> <li>find files: <code>&lt;leader&gt; + f f</code></li> <li>recent files: <code>&lt;leader&gt; + f o</code></li> <li>find words (live grep): <code>&lt;leader&gt; + f w</code></li> <li>find bookmarks: <code>&lt;leader&gt; + m a</code></li> <li>floating terminal: Alt + <code>i</code></li> <li>horizontal terminal: Alt + <code>h</code> / <code>&lt;leader&gt; + h</code></li> <li>vertical terminal: Alt + <code>v</code> / <code>&lt;leader&gt; + v</code></li> <li>next buffer: Tab</li> <li>previous buffer: Shift + Tab</li> <li>new buffer: <code>&lt;leader&gt; + b</code></li> <li>close buffer: <code>&lt;leader&gt; + x</code></li> </ul>"},{"location":"tools/vi/neovim/index.html#custom-config","title":"Custom Config","text":"<p> dreknix/tools-nvchad-config</p> <pre><code>~/.config/nvim/lua/custom/\n\u251c\u2500\u2500 init.lua\n\u251c\u2500\u2500 chadrc.lua\n\u251c\u2500\u2500 mappings.lua\n\u251c\u2500\u2500 plugins.lua\n\u251c\u2500\u2500 configs/\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lspconfig.lua\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 overrides.lua\n\u251c\u2500\u2500 after/\n\u2514\u2500\u2500 snippets/\n</code></pre>"},{"location":"tools/vi/neovim/index.html#config-files","title":"Config Files","text":"<p>Custom configuration files:</p> <ul> <li><code>init.lua</code></li> <li><code>chadrc.lua</code></li> <li><code>mappings.lua</code></li> <li><code>plugins.lua</code></li> <li><code>configs/lspconfig.lua</code></li> <li><code>configs/overrides.lua</code></li> </ul>"},{"location":"tools/vi/neovim/index.html#after-directory","title":"After Directory","text":"<p>Specific settings for each file type can be found in <code>after/ftplugin/&lt;filetype&gt;.lua</code>.</p>"},{"location":"tools/vi/neovim/index.html#snippets","title":"Snippets","text":"<p>NvChad uses the following plugins for snippets:</p> <ul> <li> L3MON4D3/LuaSnip</li> <li> rafamadriz/friendly-snippets</li> </ul> <p>The predefined snippets are installed in <code>~/.local/share/nvim/lazy/friendly-snippets/snippets/</code>. Custom snippets are loaded in <code>init.lua</code>.</p>"},{"location":"tools/vi/neovim/chadrc_lua.html","title":"chardrc.lua","text":"<p>Content of <code>~/.config/nvim/lua/custom/chadrc.lua</code>:</p> <pre><code>---@type ChadrcConfig\n local M = {}\n M.ui = {theme = 'catppuccin'}\n M.plugins = 'custom.plugins'\n M.mappings = require 'custom.mappings'\n return M\n</code></pre>"},{"location":"tools/vi/neovim/configs_lspconfig_lua.html","title":"configs/lspconfig.lua","text":"<p>Configuration of the LSP servers can be found here.</p> <p>The LSP configuration for the current buffer can be shown with <code>:LspInfo</code>. Often the file type (<code>:set ft</code>) must be set to the correct value. See <code>vim.filetype.add</code> in init.lua.</p> <p>Content of <code>~/.config/nvim/lua/custom/configs/lspconfig.lua</code>:</p> <pre><code>local base = require('plugins.configs.lspconfig')\n\nlocal on_attach = base.on_attach\nlocal capabilities = base.capabilities\n\nlocal lspconfig = require('lspconfig')\n\nlspconfig.clangd.setup({\n  on_attach = function (client, bufnr)\n    client.server_capabilities.signatureHelpProvider = false\n    on_attach(client, bufnr)\n  end,\n  capabilities = capabilities,\n})\n\nlspconfig.ansiblels.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n})\n\nlspconfig.docker_compose_language_service.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n  filetypes = {'yaml.docker-compose'},\n})\n\nlspconfig.dockerls.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n})\n\nlspconfig.jsonls.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n})\n\nlspconfig.marksman.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n})\n\nlspconfig.yamlls.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n  filetypes = {'yaml', 'yaml.ansible', 'yaml.docker-compose'},\n})\n\nlspconfig.pyright.setup({\n  on_attach = on_attach,\n  capabilities = capabilities,\n  filetypes = {'python'},\n})\n</code></pre>"},{"location":"tools/vi/neovim/configs_overrides_lua.html","title":"configs/overrides.lua","text":"<p>Content of <code>~/.config/nvim/lua/custom/configs/overrides.lua</code>:</p> <pre><code>--\n-- configure: williamboman/mason.nvim\n--\n\nM.mason = {\n  ensure_installed = {\n    -- lua stuff\n    'lua-language-server',\n    'stylua',\n\n    -- web dev stuff\n    'css-lsp',\n    'html-lsp',\n    'prettier',\n\n    -- c/cpp stuff\n    'clangd',\n    'clang-format',\n\n    -- shell stuff\n    'ansible-language-server',\n    'bash-language-server',\n    'docker-compose-language-service',\n    'dockerfile-language-server',\n    'jsonlint',\n    'marksman',\n    'yaml-language-server',\n\n    -- python stuff\n    'pyright',\n    'flake8',\n    'black',\n    'pylint',\n    'mypy',\n    'ruff',\n    'debugpy',\n  },\n}\n</code></pre> <pre><code>--\n-- configure: nvim-treesitter/nvim-treesitter\n--\nM.treesitter = {\n  ensure_installed = {\n    'bash',\n    'c',\n    'cpp',\n    'css',\n    'git_config',\n    'git_rebase',\n    'gitcommit',\n    'gitignore',\n    'go',\n    'html',\n    'ini',\n    'java',\n    'javascript',\n    'jq',\n    'json',\n    'latex',\n    'lua',\n    'make',\n    'markdown',\n    'markdown_inline',\n    'mermaid',\n    'perl',\n    'php',\n    'python',\n    'sql',\n    'xml',\n    'yaml',\n  },\n  indent = {\n    enable = true,\n    -- disable = {\n    --   'python'\n    -- },\n  },\n}\n</code></pre> <pre><code>--\n-- configure: nvim-tree/nvim-tree.lua\n--\n\nM.nvimtree = {\n  git = {\n    enable = true,\n  },\n\n  renderer = {\n    highlight_git = true,\n    icons = {\n      show = {\n        git = true,\n      },\n    },\n  },\n}\n</code></pre>"},{"location":"tools/vi/neovim/configs_overrides_lua.html#_1","title":"configs/overrides.lua","text":""},{"location":"tools/vi/neovim/configs_overrides_lua.html#lukas-reinekeindent-blanklinenvim","title":"lukas-reineke/indent-blankline.nvim","text":"<p>Define other symbols for visualizing different whitespaces in list mode. The list mode is disabled by default. F2 is used to toogle list view (see mappings.lua). With the plugin variable <code>show_end_of_line</code> the character set defined by <code>listchars</code> is used.</p> <pre><code>vim.opt.list = false\nvim.opt.listchars:append({ tab   = '\u2192 ' })  -- u2192\nvim.opt.listchars:append({ eol   = '\u21b2'  })  -- u21b2\nvim.opt.listchars:append({ space = '\u00b7'  })  -- u00b7\nvim.opt.listchars:append({ nbsp  = '\u2423'  })  -- u2423\nvim.opt.listchars:append({ trail = '\u2610'  })  -- u2610\n\nM.blankline = {\n  show_end_of_line = true,\n}\n</code></pre>"},{"location":"tools/vi/neovim/init_lua.html","title":"init.lua","text":"<p>General initialization of Neovim that is not handled by a plugin or NvChad.</p>"},{"location":"tools/vi/neovim/init_lua.html#general-settings","title":"General settings","text":"<p>Highlight the columns <code>textwidth+0</code> and <code>textwidth+20</code>. The default value of <code>textwidth</code> is <code>80</code>.</p> <pre><code>vim.opt.colorcolumn = '+0,+20'\n</code></pre> <p> TODO move to overrides or configs</p> <pre><code>-- LuaSnip uses rafamadriz/friendly-snippets\n-- extend in snipmate format\nvim.g.snipmate_snippets_path = vim.fn.stdpath \"config\" .. \"/lua/custom/snippets\"\n</code></pre>"},{"location":"tools/vi/neovim/init_lua.html#file-types","title":"File Types","text":"<p>Add file types to specific file name patterns ( see vim.filetype). The file type <code>yaml.docker-compose</code> and <code>yaml.ansible</code> is used for choosing a more specific LSP server.</p> <pre><code>vim.filetype.add({\n  pattern = {\n    -- SSH config\n    ['.*/.ssh/config.d/.*'] = 'sshconfig',\n    -- rofi config\n    ['.*/.*.rasi'] = 'css',\n    -- Docker compose\n    ['compose.ya?ml'] = 'yaml.docker-compose',\n    ['docker-compose.ya?ml'] = 'yaml.docker-compose',\n    -- Ansible\n    ['.*/playbooks/.*.ya?ml'] = 'yaml.ansible',\n    ['.*/playbooks/.*/.*.ya?ml'] = 'yaml.ansible',\n    ['.*/roles/.*/tasks/.*.ya?ml'] = 'yaml.ansible',\n    ['.*/roles/.*/handlers/.*.ya?ml'] = 'yaml.ansible',\n  },\n})\n</code></pre>"},{"location":"tools/vi/neovim/init_lua.html#securing-gopass","title":"Securing gopass","text":"<p>The tool gopass might use Neovim for editing secrets. Therefore, backup files or other external information storage must be disabled.</p> <pre><code>vim.api.nvim_create_autocmd({\"BufNewFile\", \"BufRead\"}, {\n  pattern = {'/dev/shm/gopass*'},\n  callback = function(ev)\n    vim.opt_local.swapfile = false\n    vim.opt_local.backup = false\n    vim.opt_local.undofile = false\n    vim.opt_local.shadafile = \"NONE\"\n  end\n})\n</code></pre>"},{"location":"tools/vi/neovim/mappings_lua.html","title":"mappings.lua","text":"<p>Content of <code>~/.config/nvim/lua/custom/mappings.lua</code>:</p> <pre><code>local M = {}\n\nM.general = {\n  n = {\n    -- switch between windows\n    [\"&lt;A-Left&gt;\"] = { \"&lt;cmd&gt; TmuxNavigateLeft&lt;CR&gt;\", \"Window left\" },\n    [\"&lt;A-Right&gt;\"] = { \"&lt;cmd&gt; TmuxNavigateRight&lt;CR&gt;\", \"Window right\" },\n    [\"&lt;A-Down&gt;\"] = { \"&lt;cmd&gt; TmuxNavigateDown&lt;CR&gt;\", \"Window down\" },\n    [\"&lt;A-Up&gt;\"] = { \"&lt;cmd&gt; TmuxNavigateUp&lt;CR&gt;\", \"Window up\" },\n  }\n}\n\nreturn M\n</code></pre>"},{"location":"tools/vi/neovim/plugins_lua.html","title":"plugins.md","text":"<p>Overrides already loaded NvChad plugins:</p> <ul> <li> williamboman/mason.nvim</li> <li> nvim-treesitter/nvim-treesitter</li> <li> nvim-tree/nvim-tree.lua</li> <li> lukas-reineke/indent-blankline.nvim</li> </ul> <p>Add LSP servers in <code>configs/lspconfig.lua</code>.</p> <p>Add additional plugins:</p> <ul> <li> christoomey/vim-tmux-navigator</li> </ul> <p>Content of <code>~/.config/nvim/lua/custom/plugins.lua</code>:</p> <pre><code>local overrides = require 'custom.configs.overrides'\n\nlocal plugins = {\n  {\n    'williamboman/mason.nvim',\n    opts = overrides.mason,\n  },\n  {\n    'nvim-treesitter/nvim-treesitter',\n    opts = overrides.treesitter,\n  },\n  {\n    'nvim-tree/nvim-tree.lua',\n    opts = overrides.nvimtree,\n  },\n  {\n    'lukas-reineke/indent-blankline.nvim',\n    opts = overrides.blankline,\n  },\n  {\n    'neovim/nvim-lspconfig',\n    config = function()\n      require 'plugins.configs.lspconfig'\n      require 'custom.configs.lspconfig'\n    end\n  },\n  {\n    'mfussenegger/nvim-lint',\n    event = 'VeryLazy',\n    config = function()\n      require 'custom.configs.lint'\n    end\n  },\n  {\n    'mhartington/formatter.nvim',\n    event = 'VeryLazy',\n    opts = function()\n      return require 'custom.configs.formatter'\n    end\n  },\n  {\n    'mfussenegger/nvim-dap',\n    config = function(_, opts)\n      require('core.utils').load_mappings('dap')\n    end\n  },\n  {\n    'rcarriga/nvim-dap-ui',\n    dependencies = 'mfussenegger/nvim-dap',\n    config = function()\n      local dap = require('dap')\n      local dapui = require('dapui')\n      dapui.setup()\n      dap.listeners.after.event_initialized['dapui_config'] = function()\n        dapui.open()\n      end\n      dap.listeners.before.event_terminated['dapui_config'] = function()\n        dapui.close()\n      end\n      dap.listeners.before.event_exited['dapui_config'] = function()\n        dapui.close()\n      end\n    end\n  },\n  {\n    'mfussenegger/nvim-dap-python',\n    ft = 'python',\n    dependencies = {\n      'mfussenegger/nvim-dap',\n      'rcarriga/nvim-dap-ui',\n    },\n    config = function(_, opts)\n      local path = '~/.local/share/nvim/mason/packages/debugpy/venv/bin/python'\n      require('dap-python').setup(path)\n      require('core.utils').load_mappings('dap_python')\n    end,\n  },\n  {\n    'christoomey/vim-tmux-navigator',\n    lazy = false,\n  }\n}\n\nreturn plugins\n</code></pre>"},{"location":"unix/index.html","title":"UNIX","text":"<ul> <li>systemd</li> </ul>"},{"location":"unix/bash/index.html","title":"bash","text":"","tags":["bash"]},{"location":"unix/bash/yaml.html","title":"YAML and bash","text":"<ul> <li>https://stackoverflow.com/questions/5014632/</li> <li> mrbaseman/parse_yaml</li> </ul> <p>Example yaml file:</p> <pre><code>---\nglobal:\n  input:\n    - \"main.c\"\n    - \"main.h\"\n  flags: [ \"-O3\", \"-fpic\" ]\n  sample_input:\n    -  { property1: value1, property2: value2 }\n    -  { property1: \"value 3\", property2: 'value 4' }\n  licence: |\n    this is published under\n    open source license\n    in the hope that it would\n    be useful\n...\n</code></pre> <p>The following variables are created:</p> <pre><code>global_input_1=\"main.c\"\nglobal_input_2=\"main.h\"\nglobal_flags_1=\"-O3\"\nglobal_flags_2=\"-fpic\"\nglobal_sample_input_1_property1=\"value1\"\nglobal_sample_input_1_property2=\"value2\"\nglobal_sample_input_2_property1=\"value 3\"\nglobal_sample_input_2_property2=\"value 4\"\nglobal_licence=\"this is published under\\nopen source license\\nin the hope that it would \\nbe useful\\n\"\n__=\" global\"\nglobal_=\" global_input global_flags global_sample_input global_licence\"\nglobal_flags_=\" global_flags_1 global_flags_2\"\nglobal_input_=\" global_input_1 global_input_2\"\nglobal_sample_input_=\" global_sample_input_1 global_sample_input_2\"\nglobal_sample_input_1_=\" global_sample_input_1_property1 global_sample_input_1_property2\"\nglobal_sample_input_2_=\" global_sample_input_2_property1 global_sample_input_2_property2\"\n</code></pre> <p>A list of variables can iterated with:</p> <pre><code>$ for f in $global_flags_ ; do eval echo \\$f \\$${f} ; done\nglobal_flags_1 -O3\nglobal_flags_2 -fpic\n</code></pre>","tags":["bash","YAML"]},{"location":"unix/debian/index.html","title":"Debian","text":""},{"location":"unix/debian/install.html","title":"Installing Debian","text":""},{"location":"unix/debian/install.html#debian-13-trixie-testing","title":"Debian 13 trixie (testing)","text":"<p>The target of this Debian installation is a 2TB NVME (<code>/dev/nvme0n1</code>). LUKS is enabled for the main Linux and the swap partition. Additionally <code>btrfs</code> with a flat subvolume layout is used.</p> <p>The target partition layout is:</p> <pre><code>/dev/nvme0n1p1 2.0 GB EFI System\n/dev/nvme0n1p2 4.0 GB ext4 (/boot)\n/dev/nvme0n1p3 1.9 TB LUKS encrypted (/)\n/dev/nvme0n1p4 94 GB  LUKS encrypted (swap)\n</code></pre> <p>Get the network installer from Debian as daily build.</p> <ul> <li>Copy ISO image to USB stick<ul> <li><code>cp debian-testing-amd64-netinst.iso /dev/sdX</code></li> </ul> </li> <li>Boot the USB stick<ul> <li><code>Advanced options ...</code> &gt; <code>... Expert install</code></li> </ul> </li> <li>Configure Debian installer<ul> <li><code>Choose language</code><ul> <li>Language: <code>English</code></li> <li>Country: <code>other</code> &gt; <code>Europe</code> &gt; <code>Germany</code></li> <li>Default locale: <code>en_US.UTF-8</code></li> <li>Additional locales: none</li> </ul> </li> <li><code>Configure the keyboard</code>: <code>German</code></li> <li><code>Load installer components from installation media</code><ul> <li> <code>choose-mirror</code></li> <li> <code>network-console</code></li> </ul> </li> <li><code>Detect network hardware</code></li> <li><code>Configure the network</code></li> <li><code>Continue installation remotely using SSH</code><ul> <li><code>Remote installation password</code></li> </ul> </li> </ul> </li> </ul> <p>Continue with installation via SSH:</p> <ul> <li><code>ssh installer@IP-Addr</code><ul> <li><code>Start installer (export mode)</code></li> </ul> </li> </ul> <p>Continue configuring Debian installer:</p> <ul> <li><code>Choose a mirror of the Debian archive</code><ul> <li><code>http</code> &gt; <code>Germany</code> &gt; <code>ftp.de.debian.org</code></li> </ul> </li> <li><code>Set up users and passwords</code><ul> <li>Allow login as root: <code>No</code></li> <li>Full name of new user: <code>dreknix</code></li> <li>Username for your account: <code>dreknix</code></li> <li>Password:</li> </ul> </li> <li><code>Configure the clock</code><ul> <li>Set the clock using NTP: <code>Yes</code></li> <li>NTP server to use: <code>0.debian.pool.ntp.org</code></li> <li>Time zone: <code>Europe/Berlin</code></li> </ul> </li> <li><code>Detect disks</code></li> <li><code>Partition disks</code><ul> <li><code>Manual</code><ul> <li><code>Create a new partion</code><ul> <li>Size: <code>2 GB</code></li> <li>Location: <code>Beginning</code></li> <li>Name: <code>EFI</code></li> <li>Use as: <code>EFI System Partition</code></li> <li>Bootable flag: <code>on</code></li> </ul> </li> <li><code>Create a new partion</code><ul> <li>Size: <code>4 GB</code></li> <li>Location: <code>Beginning</code></li> <li>Name: <code>Boot</code></li> <li>Use as: <code>Ext4 journaling file system</code></li> <li>Mount point: <code>/boot</code></li> </ul> </li> <li><code>Create a new partion</code><ul> <li>Size: <code>1.9 TB</code></li> <li>Location: <code>Beginning</code></li> <li>Name: <code>Crypto_Linux</code></li> <li>Use as: <code>physical volume for encryption</code></li> <li>Encryption key: <code>Passphrase</code></li> <li>Erase data: <code>no</code></li> </ul> </li> <li><code>Create a new partion</code><ul> <li>Size: <code>94 GB</code></li> <li>Location: <code>Beginning</code></li> <li>Name: <code>Crypto_Swap</code></li> <li>Use as: <code>physical volume for encryption</code></li> <li>Encryption key: <code>Passphrase</code></li> <li>Erase data: <code>no</code></li> </ul> </li> <li><code>Configure encrypted volumes</code><ul> <li>Write the changes to disk: <code>Yes</code></li> <li><code>Create encrypted volumes</code><ul> <li>Select both crypto partitions</li> </ul> </li> <li><code>Finish</code><ul> <li>Enter passphrase for both partitions</li> </ul> </li> </ul> </li> <li><code>Partition settings</code> - root crypto partition<ul> <li>Use as: <code>btrfs journaling file system</code></li> <li>Mount point: <code>/</code></li> <li>Label: <code>root</code></li> </ul> </li> <li><code>Partition settings</code> - swap crypto partition<ul> <li>Use as: <code>swap area</code></li> </ul> </li> <li><code>Finish partitioning and write changes to disk</code><ul> <li>Write the changes to disk: <code>Yes</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Exit to shell in order to change the <code>btrfs</code> and <code>/tmp</code> configuration.</p> <pre><code>~ # df -h\nFilesystem                Size      Used Available Use% Mounted on\ntmpfs                     3.1G    532.0K      3.1G   0% /run\ndevtmpfs                 15.3G         0     15.3G   0% /dev\n/dev/sda1               547.0M    547.0M         0 100% /cdrom\nnone                    147.9K     67.0K     75.9K  47% /sys/firmware/efi/efivars\n/dev/mapper/nvme0n1p3_crypt\n                          1.7T      5.8M      1.7T   0% /target\n/dev/nvme0n1p2            3.6G     28.0K      3.4G   0% /target/boot\n/dev/nvme0n1p1            1.9G      4.0K      1.9G   0% /target/boot/efi\n</code></pre> <p>Unmount the <code>/target</code> partitions:</p> <pre><code>~ # umount /target/boot/efi\n~ # umount /target/boot\n~ # umount /target\n</code></pre> <p>Mount the <code>btrfs</code> encrypted partition to <code>/mnt</code>:</p> <pre><code>~ # mount /dev/mapper/nvme0n1p3_crypt /mnt\n~ # cd /mnt/\n/mnt # ls\n@rootfs\n</code></pre> <p>Change the name of the root subvolume:</p> <pre><code>/mnt # mv @rootfs @\n</code></pre> <p>Create other subvolumes:</p> <pre><code>/mnt # btrfs subvolume create @snapshots\nCreate subvolume './@snapshots'\n/mnt # btrfs subvolume create @home\nCreate subvolume './@home'\n/mnt # btrfs subvolume create @var_cache\nCreate subvolume './@var_cache'\n/mnt # btrfs subvolume create @var_crash\nCreate subvolume './@var_crash'\n/mnt # btrfs subvolume create @var_log\nCreate subvolume './@var_log'\n/mnt # btrfs subvolume create @var_lib_accountsservice\nCreate subvolume './@var_lib_accountsService'\n/mnt # btrfs subvolume create @var_lib_gdm3\nCreate subvolume './@var_lib_gdm3'\n</code></pre> <p>Create the new mount structure under <code>/target</code>:</p> <pre><code>/mnt # cd /\n~ # mount -o noatime,compress=zstd:3,subvol=@ /dev/mapper/nvme0n1p3_crypt /target\n~ # mount /dev/nvme0n1p2 /target/boot/\n~ # mount /dev/nvme0n1p1 /target/boot/efi/\n~ # mkdir /target/.btrfs\n~ # mkdir /target/.snapshots\n~ # mkdir /target/home\n~ # mkdir /target/var\n~ # mkdir /target/var/cache\n~ # mkdir /target/var/crash\n~ # mkdir /target/var/log\n~ # mkdir /target/var/lib\n~ # mkdir /target/var/lib/AccountsService\n~ # mkdir /target/var/lib/gdm3\n~ # mount -o noatime,compress=zstd:3,subvol=@snapshots /dev/mapper/nvme0n1p3_crypt /target/.snapshots\n~ # mount -o noatime,compress=zstd:3,subvol=@home /dev/mapper/nvme0n1p3_crypt /target/home\n~ # mount -o noatime,compress=zstd:3,subvol=@var_cache /dev/mapper/nvme0n1p3_crypt /target/var/cache\n~ # mount -o noatime,compress=zstd:3,subvol=@var_crash /dev/mapper/nvme0n1p3_crypt /target/var/crash\n~ # mount -o noatime,compress=zstd:3,subvol=@var_log /dev/mapper/nvme0n1p3_crypt /target/var/log\n~ # mount -o noatime,compress=zstd:3,subvol=@var_lib_accountsservice /dev/mapper/nvme0n1p3_crypt /target/var/lib/AccountsService\n~ # mount -o noatime,compress=zstd:3,subvol=@var_lib_gdm3 /dev/mapper/nvme0n1p3_crypt /target/var/lib/gdm3\n</code></pre> <p>Info</p> <p>The flags <code>ssd</code> and <code>space_cache=v2</code> are enabled by default.</p> <p>The flag <code>discard=async</code> is also not needed anymore.  TODO</p> <p>Unmount the <code>btrfs</code> partition:</p> <pre><code>~ # unmount /mnt\n</code></pre> <p>Edit the <code>/target/etc/fstab</code> file:</p> <pre><code>/dev/mapper/nvme0n1p3_crypt  /                         btrfs  noatime,compress=zstd:3,subvol=@                         0   0\n/dev/mapper/nvme0n1p3_crypt  /.snapshots               btrfs  noatime,compress=zstd:3,subvol=@snapshots                0   0\n/dev/mapper/nvme0n1p3_crypt  /home                     btrfs  noatime,compress=zstd:3,subvol=@home                     0   0\n/dev/mapper/nvme0n1p3_crypt  /var/cache                btrfs  noatime,compress=zstd:3,subvol=@var_cache                0   0\n/dev/mapper/nvme0n1p3_crypt  /var/crash                btrfs  noatime,compress=zstd:3,subvol=@var_crash                0   0\n/dev/mapper/nvme0n1p3_crypt  /var/log                  btrfs  noatime,compress=zstd:3,subvol=@var_log                  0   0\n/dev/mapper/nvme0n1p3_crypt  /var/lib/AccountsService  btrfs  noatime,compress=zstd:3,subvol=@var_lib_accountsservice  0   0\n/dev/mapper/nvme0n1p3_crypt  /var/lib/gdm3             btrfs  noatime,compress=zstd:3,subvol=@var_lib_gdm3             0   0\n\n/dev/mapper/nvme0n1p3_crypt  /.btrfs                   btrfs  noatime,compress=zstd:3,subvolid=5                       0   0\n</code></pre> <p>Info</p> <p>Instead of device names the UUID of the partitions should be used. The get corresponding UUIDs use the command <code>blkid</code>.</p> <p>Info</p> <p>Optional: the directory <code>/tmp</code> can be configured as <code>tmpfs</code>.  TODO Why systemd tmp.mount should currently not be used in Debian</p> <p>Append the following line to <code>/target/etc/fstab</code>:</p> <pre><code>tmpfs   /tmp   tmpfs   nosuid,nodev,strictatime,size=4g,nr_inodes=1m,mode=1777   0   0\n</code></pre> <p>Create the directory and mount it for installation:</p> <pre><code>~ # mkdir /target/tmp\n~ # mount -t tmpfs -o nosuid,nodev,strictatime,size=4g,nr_inodes=1m,mode=1777 tmpfs /target/tmp\n</code></pre> <p>Exit the shell and continue with the installation process.</p> <p>Continue configuring Debian installer:</p> <ul> <li><code>Install the base system</code><ul> <li>Kernel to install: <code>linux-image-amd64</code></li> <li>Drivers to include in the initrd: <code>generic: include all available drivers</code></li> </ul> </li> <li><code>Configure the package manager</code><ul> <li>Use a network mirror: <code>Yes</code><ul> <li><code>http</code> &gt; <code>Germany</code> &gt; <code>ftp.de.debian.org</code></li> </ul> </li> <li>Use non-free firmware: <code>Yes</code></li> <li>Use non-free software: <code>Yes</code></li> <li>Enable source repositories in APT: <code>No</code></li> <li>Services to use:<ul> <li> security updates (from security.debian.org)</li> <li> release updates</li> <li> backported software</li> </ul> </li> </ul> </li> <li><code>Select and install software</code><ul> <li>Updates management on this system: <code>No automatic updates</code></li> <li>Participate in the package usage survey: <code>Yes</code></li> <li>Choose software to install:<ul> <li> Debian desktop environment</li> <li> ... GNOME</li> <li> SSH server</li> <li> standard system utilities</li> </ul> </li> </ul> </li> <li><code>Install the GRUB boot loader</code><ul> <li>Force GRUB installation to the EFI removable media path: <code>Yes</code></li> <li>Update NVRAM variables to automatically boot into Debian: <code>Yes</code></li> <li>Run os-prober automatically to detect and boot other OSes: <code>No</code></li> </ul> </li> <li><code>Finish the installation</code><ul> <li>Is the system clock set to UTC: <code>Yes</code></li> <li>Reboot</li> </ul> </li> </ul> <p>Finished</p>"},{"location":"unix/debian/tweak.html","title":"Tweak the Fresh Installation","text":"<p>After the first reboot tweak the fresh installation.</p>"},{"location":"unix/debian/tweak.html#btrfs","title":"btrfs","text":"<p>Fix permissions for <code>/.btrfs</code> and <code>/.snapshots</code>:</p> <pre><code>sudo chown root:sudo /.btrfs /.snapshots\nsudo chmod 0750 /.btrfs /.snapshots\n</code></pre> <p>Install missing tools:</p> <pre><code>sudo apt install btrbk btrfs-compsize\n</code></pre>"},{"location":"unix/debian/tweak.html#use-uuid-in-etcfstab","title":"Use UUID in /etc/fstab","text":"<p>Get with <code>sudo blkid</code> the UUIDs of each partition and use the UUID instead of the partition device name.</p>"},{"location":"unix/debian/tweak.html#luks","title":"LUKS","text":"<p>Unlock swap partition with key file instead of entering passphrase twice.</p> <p>Create key file with 8196 bytes of random data:</p> <pre><code>sudo dd if=/dev/random bs=1024 count=8 of=/etc/cryptsetup-keys.d/nvme0n1p4_crypt.key\n</code></pre> <p>Add key file to LUKS disk encryption:</p> <pre><code>sudo cryptsetup luksAddKey /dev/nvme0n1p4 /etc/cryptsetup-keys.d/nvme0n1p4_crypt.key\n</code></pre> <p>Add key file to <code>/etc/crypttab</code>:</p> <pre><code>nvme0n1p4_crypt UUID=415d02ee-fa95-41ba-9f18-f47df34dea0e /etc/cryptsetup-keys.d/nvme0n1p4_crypt.key luks,swap,discard\n</code></pre> <p>The key file must be present during boot time, so it must be included into the initramfs image. Therefore, the path <code>/etc/cryptsetup-keys.d/</code> must be included in the file <code>/etc/cryptsetup-initramfs/conf-hook</code>.</p> <pre><code>KEYFILE_PATTERN=\"/etc/cryptsetup-keys.d/*.key\"\n</code></pre> <p>Since now the key file is part of the initramfs image, the permissions need to be set. Therefore, create a file <code>/etc/initramfs-tools/conf.d/umask</code> with the following content:</p> <pre><code>UMASK=0077\n</code></pre> <p>Create the initramfs image:</p> <pre><code>sudo update-initramfs -u\n</code></pre> <p>Reboot the computer and test, if the swap partition is available.</p>"},{"location":"unix/debian/tweak.html#enable-ssh-for-unlocking-luks","title":"Enable SSH for unlocking LUKS","text":"<p> TODO</p>"},{"location":"unix/debian/tweak.html#plymouth","title":"Plymouth","text":"<p>Activate plymouth during boot for LUKS prompt.</p> <p>Add <code>splash</code> to <code>GRUB_CMDLINE_LINUX_DEFAULT</code>:</p> /etc/default/grub<pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"\n</code></pre> <p>Update GRUB configuration:</p> <pre><code>sudo update-grub2\n</code></pre>"},{"location":"unix/debian/tweak.html#configure-zram","title":"Configure zram","text":"<p>See the blog article about zram.</p>"},{"location":"unix/debian/tweak.html#hibernation","title":"Hibernation","text":"<p> TODO</p> <ul> <li>disable secure boot</li> <li><code>cat /sys/power/state</code></li> <li><code>/etc/initramfs-tools/conf.d/resume</code></li> <li><code>systemctl hibernate</code></li> </ul>"},{"location":"unix/debian/tweak.html#configure-power-settings","title":"Configure Power Settings","text":"<p> TODO</p> <ul> <li>lid close</li> <li>power button</li> <li>time outs</li> </ul> <pre><code>gsettings set org.gnome.settings-daemon.plugins.power ambient-enabled false\ngsettings set org.gnome.settings-daemon.plugins.power idle-dim false\ngsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing'\ngsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type 'nothing'\n\ngsettings set org.gnome.desktop.session idle-delay 600\n\ngsettings set org.gnome.desktop.interface show-battery-percentage true\n</code></pre>"},{"location":"unix/debian/tweak.html#install-additional-packages","title":"Install additional Packages","text":"<pre><code>sudo apt install curl git lshw htop\n</code></pre> <p> TODO merge this with Ansible</p>"},{"location":"unix/debian/tweak.html#finalize-with-ansible","title":"Finalize with Ansible","text":"<p> TODO describe the steps</p>"},{"location":"unix/filesystems/index.html","title":"Filesystems","text":""},{"location":"unix/filesystems/btrfs.html","title":"btrfs","text":"<p>btrfs combines a filesystem with copy-on-write principles with a logical volume manager. The btrfs file system is marked as stable in the Linux kernel since 2013.</p> <p>https://btrfs.readthedocs.io/</p>"},{"location":"unix/filesystems/btrfs.html#layout","title":"Layout","text":"<ul> <li>https://sysguides.com/install-fedora-with-snapshot-and-rollback-support/</li> <li>https://youtu.be/JvfCieWkXxI?si=tFSJziZylZpbDwg0</li> </ul> <p>With the following layout booting a read-only snapshot is possible since all directories that needs to be writable are not part of the root file system subvolume:</p> /etc/fstab<pre><code>UUID=...   /                          btrfs   noatime,compress=zstd:3,subvol=@                          0   0\nUUID=...   /.snapshots                btrfs   noatime,compress=zstd:3,subvol=@snapshots                 0   0\nUUID=...   /home                      btrfs   noatime,compress=zstd:3,subvol=@home                      0   0\nUUID=...   /var/cache                 btrfs   noatime,compress=zstd:3,subvol=@var_cache                 0   0\nUUID=...   /var/crash                 btrfs   noatime,compress=zstd:3,subvol=@var_crash                 0   0\nUUID=...   /var/log                   btrfs   noatime,compress=zstd:3,subvol=@var_log                   0   0\nUUID=...   /var/lib/AccountsService   btrfs   noatime,compress=zstd:3,subvol=@var_lib_accountsservice   0   0\nUUID=...   /var/lib/gdm3              btrfs   noatime,compress=zstd:3,subvol=@var_lib_gdm3              0   0\n\nUUID=...   /.btrfs                    btrfs   noatime,compress=zstd:3,subvolid=5                        0   0\n</code></pre> <p>Info</p> <p>The directories <code>/.btrfs</code> and <code>/.snapshots</code> must be only accessible by the root user and the group sudo (for tab completion).</p> <pre><code>sudo chown root:sudo /.btrfs /.snapshots\nsudo chmod 0750 /.btrfs /.snapshots\n</code></pre> <p>Warning</p> <p>Due to LUKS disk encryption the <code>/boot</code> directory is not part of the root file system subvolume. Do not delete any kernels that are needed to boot an old snapshot.</p> <p>Depending on the usage of the computer, other subvolumes are also needed:</p> <ul> <li>Docker: <code>/var/lib/docker</code></li> <li>podman: <code>/var/lib/container</code></li> <li>libvirt: <code>/var/lib/libvirt</code></li> <li>Other services: <code>/srv</code></li> </ul> /etc/fstab<pre><code>UUID=...   /var/lib/docker            btrfs   noatime,compress=zstd:3,subvol=@var_lib_docker            0   0\nUUID=...   /var/lib/container         btrfs   noatime,compress=zstd:3,subvol=@var_lib_container         0   0\nUUID=...   /var/lib/libvirt           btrfs   noatime,compress=zstd:3,subvol=@var_lib_libvirt           0   0\n\nUUID=...   /srv                       btrfs   noatime,compress=zstd:3,subvol=@srv                       0   0\n</code></pre>"},{"location":"unix/filesystems/btrfs.html#snapshots","title":"Snapshots","text":"<ul> <li>https://youtu.be/_97JOyC1o2o?si=8W8XuKHa7o7yqSre</li> </ul>"},{"location":"unix/filesystems/btrfs.html#create-snapshots","title":"Create Snapshots","text":"<p>Create a snapshot from a subvolume:</p> <pre><code>sudo btrfs subvolume snapshot /path/to/volume /path/to/snapshot\n</code></pre> <p>The snapshot is writable by default. A read-only snapshot can be created with the additional <code>-r</code> option.</p>"},{"location":"unix/filesystems/btrfs.html#read-only-snapshots","title":"Read-only Snapshots","text":"<pre><code>$ sudo btrfs property get -t subvol /path/to/snapshot\nro=true\n</code></pre> <p>Make snapshot writeable:</p> <pre><code>sudo btrfs property set -ts /path/to/snapshot ro false\n</code></pre>"},{"location":"unix/filesystems/btrfs.html#rollback","title":"Rollback","text":"<p>First boot to the last working snapshot. If you have <code>grub-btrfs</code> installed, you can choose the snapshot from the boot menu. Or you can add the snapshot as a kernel option.</p> <p>Normally btrfs adds the following option the kernel (during <code>update-grub2</code>):</p> <pre><code>rootflags=subvol=@\n</code></pre> <p>To select a different snapshot change the option during boot (press <code>e</code> in the GRUB menue) to:</p> <pre><code>rootflags=subvolid=&lt;id&gt;\n</code></pre> <p>Now the snapshot is used as rootfs. Due to the chosen layout even a read-only snapshot (i.e., create by <code>btrbk</code>) can be booted.</p> <p>After the system was successfully booted, check if the right snapshot is mounted:</p> <pre><code>$ mount | grep \" / \"\n/dev/mapper/vda3_crypt on / type btrfs (rw,noatime,compress=zstd:3,discard=async,space_cache=v2,subvolid=277,subvol=/@snapshots/rootfs.20231214T1820)\n</code></pre> <p>Even if the mount option is <code>rw</code> the snapshot can be still read-only.</p> <p>To make the current snapshot the default for the rootfs subvolume, the following steps must be performed.</p> <p>Change into <code>/.btrfs</code> and create a read-only snapshot of the current system:</p> <pre><code>$ sudo btrfs subvolume snapshot -r @ @snapshots/broken-rootfs\nCreate a readonly snapshot of '@' in '@snapshots/broken-rootfs'\n</code></pre> <p>Delete the broken root file system:</p> <pre><code>$ sudo btrfs subvolume snapshot delete @\nDelete subvolume (no-commit): '/.btrfs/@'\n</code></pre> <p>Create a writable snapshot of the current booted snapshot as the new rootfs:</p> <pre><code>$ sudo btrfs subvolume snapshot @snapshots/rootfs.20231214T1820 @\nCreate a snapshot of '@snapshots/rootfs.20231214T1820' in './@'\n</code></pre> <p>Reboot the system and check the root file system:</p> <pre><code>$ mount | grep \" / \"\n/dev/mapper/vda3_crypt on / type btrfs (rw,noatime,compress=zstd:3,discard=async,space_cache=v2,subvolid=282,subvol=/@)\n</code></pre>"},{"location":"unix/filesystems/btrfs.html#disable-cow","title":"Disable COW","text":"<p>Copy-on-write should be disabled when large files are frequently changed by random write (i.e., databases or VM images). In btrfs the copy-on-write mechanism can be disabled by mounting with the option <code>nodatacow</code> or with <code>chattr +C</code> for directories or files.</p> <p>Most tools are aware of this problem and are disabling copy-on-write by default:</p> <ul> <li>libvirt: https://listman.redhat.com/archives/libvir-list/2020-July/msg01377.html</li> <li>systemd: https://github.com/systemd/systemd/blob/main/tmpfiles.d/journal-nocow.conf</li> <li>...  TODO</li> </ul>"},{"location":"unix/filesystems/btrfs.html#tools","title":"Tools","text":""},{"location":"unix/filesystems/btrfs.html#overview","title":"Overview","text":"<p>Used tools:</p> <ul> <li> digint/btrbk   A simple perl script that can be started by crontab or systemd timers. The   path of snapshots can be configured. The tool supports also backup via SSH to   remote servers.</li> <li> Antynea/grub-btrfs   Include btrfs snapshots as boot options in the GRUB menu.</li> <li> kilobyte/compsize   Display the compression type and ratio in btrfs.</li> </ul> <p>Other:</p> <ul> <li> linuxmint/timeshift   A snapshot and restore tool that is maintained by the Linux Mint project. The   tool requires a flat subvolume layout and a fixed naming scheme with <code>@</code> for   root file system and <code>@home</code> for the folder <code>/home</code>.</li> <li> openSUSE/snapper   A snapshot and restore tool that is maintained by openSUSE. The tool creates a   <code>.snapshot</code> subvolume for each volume to store there the snapshots.</li> </ul>"},{"location":"unix/filesystems/btrfs.html#btrbk","title":"btrbk","text":"<pre><code>sudo apt install btrbk\n</code></pre>"},{"location":"unix/filesystems/btrfs.html#config","title":"Config","text":"<p>Example configuration for btrbk and the rootfs subvolume:</p> /etc/btrbk/btrbk.conf<pre><code># Enable transaction log\ntransaction_log            /var/log/btrbk.log\n\n# Preserve all snapshots for a minimum period of time.\nsnapshot_preserve_min      1d\n\n# Retention policy for the source snapshots.\nsnapshot_preserve          3h 5d 4w 6m 1y\n\nsnapshot_dir   /.snapshots\nsubvolume      /\nsnapshot_name  rootfs\nsubvolume      /home\nsnapshot_name  home\n</code></pre>"},{"location":"unix/filesystems/btrfs.html#create-a-snapshot","title":"Create a snapshot","text":"<pre><code>sudo btrbk run\n</code></pre> <p>To perform a try-run add the option <code>-n</code>.</p>"},{"location":"unix/filesystems/btrfs.html#show-diff-between-two-snapshots","title":"Show diff between two Snapshots","text":"<p>Create a snapshot and install the package <code>htop</code> and create a second snapshot. After that the differences between both snapshots can be shown:</p> <pre><code>$ sudo btrbk diff /.snapshots/rootfs.20231214T1820_1 /.snapshots/rootfs.20231214T1821\nFLAGS  COUNT  SIZE        FILE\n+c.        1   44.00 KiB  etc/mailcap\n+c.        1  312.00 KiB  usr/bin/htop\n+ci        1    2.49 KiB  usr/share/applications/htop.desktop\n+c.        1   28.00 KiB  usr/share/applications/mimeinfo.cache\n+ci        1    0.22 KiB  usr/share/doc/htop/AUTHORS\n+..        1    4.00 KiB  usr/share/doc/htop/README.gz\n+..        1    8.00 KiB  usr/share/doc/htop/changelog.Debian.gz\n+..        1   20.00 KiB  usr/share/doc/htop/changelog.gz\n+ci        1    1.29 KiB  usr/share/doc/htop/copyright\n+c.        1   28.00 KiB  usr/share/icons/hicolor/icon-theme.cache\n+c.        1   12.00 KiB  usr/share/icons/hicolor/scalable/apps/htop.svg\n+..        1    8.00 KiB  usr/share/man/man1/htop.1.gz\n+..        1    4.00 KiB  usr/share/pixmaps/htop.png\n+c.        1  140.00 KiB  var/lib/apt/extended_states\n+ci        1    0.56 KiB  var/lib/dpkg/info/htop.list\n+ci        1    0.63 KiB  var/lib/dpkg/info/htop.md5sums\n+c.        1    2.30 MiB  var/lib/dpkg/status\n+c.        1    2.30 MiB  var/lib/dpkg/status-old\n</code></pre> <p>The list of available snapshots can be shown with <code>btrbk list snapshots</code>.</p>"},{"location":"unix/filesystems/btrfs.html#grub-btrfs","title":"grub-btrfs","text":"<p> TODO</p>"},{"location":"unix/filesystems/btrfs.html#compsize","title":"compsize","text":"<pre><code>sudo apt install btrfs-compsize\n</code></pre> <p>To see the impact of the used compression:</p> <pre><code>$ sudo compsize -x /\nProcessed 275808 files, 182511 regular extents (183978 refs), 91269 inline.\nType       Perc     Disk Usage   Uncompressed Referenced\nTOTAL       79%      7.0G         8.8G         9.5G\nnone       100%      6.0G         6.0G         6.5G\nzstd        33%      961M         2.7G         2.9G\n</code></pre>"},{"location":"unix/filesystems/luks.html","title":"Linux Unified Key Setup (LUKS)","text":""},{"location":"unix/systemd/index.html","title":"systemd","text":"<ul> <li>https://github.com/systemd/systemd/releases</li> <li>https://systemd.io/</li> </ul>"},{"location":"unix/systemd/index.html#add-a-service-timer","title":"Add a service, timer, ...","text":"<p>Create file in <code>/usr/local/lib/systemd/system</code>.</p>"},{"location":"unix/systemd/index.html#documentation","title":"Documentation","text":""},{"location":"unix/systemd/index.html#systemd-for-administrators","title":"systemd for Administrators","text":"<ul> <li>Part I -    Verifying Bootup</li> <li>Part II -    Which Service Owns Which Processes?</li> <li>Part III -    How Do I Convert A SysV Init Script Into A systemd Service File?</li> <li>Part IV</li> <li>Part V</li> <li>Part VI</li> <li>Part VII</li> <li>Part VIII</li> <li>Part IX</li> <li>Part X</li> <li>Part XI</li> <li>Part XII</li> <li>Part XIII</li> <li>Part XIV</li> <li>Part XV</li> <li>Part XVI</li> <li>Part XVII</li> <li>Part XVIII</li> <li>Part XIX</li> <li>Part XX</li> </ul>"},{"location":"unix/systemd/bootctl.html","title":"bootctl","text":"<ul> <li>bootctl(1)</li> <li>systemd-boot(7)</li> </ul>"},{"location":"unix/systemd/journalctl.html","title":"journalctl","text":"<ul> <li>journalctl(1)</li> </ul> <p>To see messages from other users and the system, add the current user to the group <code>systemd-journal</code>.</p>"},{"location":"unix/systemd/journalctl.html#display-logs","title":"Display Logs","text":""},{"location":"unix/systemd/journalctl.html#from-the-current-boot","title":"From the Current Boot","text":"<pre><code>journalctl -b\n</code></pre> <p>Show the past boots</p> <pre><code>journalctl --list-boots\n</code></pre>"},{"location":"unix/systemd/journalctl.html#time-window","title":"Time Window","text":"<pre><code>journalctl --since \"2020-01-01\" --until \"2020-01-02 17:15:00\"\n</code></pre> <p>or</p> <pre><code>journalctl --since yesterday --until \"1 hour ago\"\n</code></pre>"},{"location":"unix/systemd/journalctl.html#kernel-messages","title":"Kernel Messages","text":"<pre><code>journalctl -k\n</code></pre>"},{"location":"unix/systemd/journalctl.html#filter","title":"Filter","text":""},{"location":"unix/systemd/journalctl.html#by-priority","title":"By Priority","text":"<p>Priority: <code>emerg</code>, <code>alert</code>, <code>crit</code>, <code>err</code>, <code>warning</code>, <code>notice</code>, <code>info</code>, <code>debug</code></p> <pre><code>journalctl -p err -b\n</code></pre>"},{"location":"unix/systemd/journalctl.html#by-facility","title":"By Facility","text":"<p>Facility: <code>kern</code>, <code>mail</code>, <code>syslog</code>, <code>local0</code>, ...</p> <pre><code>journalctl --facility=auth\n</code></pre> <p>Get list of facilities: <code>journalctl --facility=help</code></p>"},{"location":"unix/systemd/journalctl.html#by-unit","title":"By Unit","text":"<p>Get list of systemd units: <code>systemctl list-units</code></p> <pre><code>journalctl -u ssh\njournalctl -u ssh.service\njournalctl --unit ssh\n</code></pre>"},{"location":"unix/systemd/journalctl.html#by-identifier","title":"By Identifier","text":"<pre><code>journalctl -t sshd\njournalctl --identifier=sshd\n</code></pre>"},{"location":"unix/systemd/journalctl.html#by-field","title":"By Field","text":"<p>Get a description of available fields: <code>man systemd.journal-fields</code></p> <p>Query which entries exist for a speficic field:</p> <pre><code>journalctl -F _UID\njournalctl -F _PID\n</code></pre> <p>List all entries in the journal for a specific field:</p> <pre><code>journalctl _PID=9099\n</code></pre>"},{"location":"unix/systemd/journalctl.html#by-pattern","title":"By Pattern","text":"<p>Grep a pattern in the message text.</p> <p>Find case insensitive all entry with message containing <code>error</code>:</p> <pre><code>journal -g \"error\"\n</code></pre>"},{"location":"unix/systemd/journalctl.html#disk-usage","title":"Disk Usage","text":"<pre><code>journalctl --disk-usage\n</code></pre> <p>Clear the history</p> <pre><code>journalctl --vacuum-time=1week\n</code></pre>"},{"location":"unix/systemd/localectl.html","title":"resolvectl","text":"<ul> <li>resolvectl(1)</li> </ul>"},{"location":"unix/systemd/loginctl.html","title":"loginctl","text":"<ul> <li>loginctl(1)</li> </ul>"},{"location":"unix/systemd/loginctl.html#wayland-or-x11","title":"Wayland or X11","text":"<pre><code>$ loginctl show-session 2 | grep Type\nType=x11\n</code></pre>"},{"location":"unix/systemd/machinectl.html","title":"machinectl","text":"<ul> <li>machinectl(1)</li> </ul>"},{"location":"unix/systemd/networkctl.html","title":"networkctl","text":"<ul> <li>networkctl(1)</li> </ul>"},{"location":"unix/systemd/portablectl.html","title":"localectl","text":"<ul> <li>localectl(1)</li> </ul>"},{"location":"unix/systemd/resolvectl.html","title":"protablectl","text":"<ul> <li>protablectl(1)</li> </ul>"},{"location":"unix/systemd/systemctl.html","title":"systemctl","text":"<ul> <li>systemctl(1)</li> </ul>"},{"location":"unix/systemd/systemctl.html#state-of-systemd-and-services","title":"State of systemd and services","text":"<p>Overview about all services:</p> <pre><code>systemctl\n</code></pre> <p>Get information about a service:</p> <pre><code>systemctl status cron.service\n</code></pre>"},{"location":"unix/systemd/systemctl.html#content-of-service-timer-etc","title":"Content of service, timer, etc","text":"<pre><code>systemctl cat cron.service\n</code></pre>"},{"location":"unix/systemd/systemctl.html#boot-into-bios-setup","title":"Boot into BIOS Setup","text":"<pre><code>sudo systemctl reboot --firmware-setup\n</code></pre>"},{"location":"unix/systemd/systemd.html","title":"systemd Tools","text":""},{"location":"unix/systemd/systemd.html#systemd-cgls","title":"systemd-cgls","text":"<ul> <li>systemd-cgls(1)</li> </ul>"},{"location":"unix/systemd/timedatectl.html","title":"timedatectl","text":"<ul> <li>timedatectl(1)</li> </ul>"},{"location":"unix/tools/index.html","title":"Tools","text":""},{"location":"unix/tools/apt.html","title":"Advanced Package Tool (apt)","text":"<ul> <li>debian APT Git-Repository</li> <li>apt(8)</li> <li>apt-cache(8)</li> <li>apt-mark(8)</li> <li>Debian Package Management Book</li> </ul>","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#keys","title":"Keys","text":"","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#list-keys","title":"List Keys","text":"<p>Get a list of all keys configured for <code>apt</code> on your system:</p> <pre><code>sudo apt-key list\n</code></pre>","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#refresh-expired-keys","title":"Refresh Expired Keys","text":"<p>When you get an <code>EXPKEYSIG</code> error while <code>apt update</code>, you can update the expired key with the following command:</p> <pre><code>sudo apt-key adv --keyserver keys.gnupg.net --recv-keys AAAABBBBCCCCDDDD\n</code></pre>","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#packages-have-been-kept-back","title":"Packages have been kept back","text":"<pre><code>$ sudo apt upgrade\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nCalculating upgrade... Done\nThe following packages have been kept back:\n  qemu-guest-agent snapd\n0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.\n</code></pre> <p>If packages are kept back, there are three reasons for that:</p> <ul> <li>The package is marked as hold back</li> <li>The package has changed dependencies</li> <li>The package is a phased update</li> </ul>","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#packages-are-marked-as-hold-back","title":"Packages are marked as hold back","text":"<p>Individual packages can be marked as held back with <code>apt-mark hold</code>. This will prevent that the packages are automatically installed, upgraded or removed.</p> <p>To check if a package is held back use the command <code>apt-mark unhold</code>:</p> <pre><code>$ apt-mark showhold\nqemu-guest-agent\n</code></pre>","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#packages-have-changed-dependencies","title":"Packages have changed dependencies","text":"<p>If the dependencies of a package has changed, and one of the new dependencies is not unmet, than the package will not be updated.</p> <p>To see which package version is installed and which is upgradable use the command <code>apt list -a</code>:</p> <pre><code>$ apt list -a qemu-guest-agent\nListing... Done\nqemu-guest-agent/jammy-updates 1:6.2+dfsg-2ubuntu6.5 amd64 [upgradable from: 1:6.2+dfsg-2ubuntu6.4]\nqemu-guest-agent/now 1:6.2+dfsg-2ubuntu6.4 amd64 [installed,upgradable to: 1:6.2+dfsg-2ubuntu6.5]\nqemu-guest-agent/jammy-security 1:6.2+dfsg-2ubuntu6.2 amd64\nqemu-guest-agent/jammy 1:6.2+dfsg-2ubuntu6 amd64\n</code></pre> <p>Use <code>apt-show</code> for each version to check the dependencies:</p> <pre><code>apt show qemu-guest-agent=1:6.2+dfsg-2ubuntu6.4\napt show qemu-guest-agent=1:6.2+dfsg-2ubuntu6.5\n</code></pre> <p>If there are changed dependencies, install the update with the new depencies via:</p> <pre><code>sudo apt --with-new-pkgs upgrade\n</code></pre> <p>When you use <code>apt install</code> to resolve this issue the packages will be marked as manual installed.</p>","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#packages-are-a-phased-update","title":"Packages are a phased update","text":"<p>Sometimes packages are not available to all users. Then only some users receive the update. This is a safety feature.</p> <p>To check whether an update is a phased update, use the following command:</p> <pre><code>$ apt-cache policy qemu-guest-agent\nqemu-guest-agent:\n  Installed: 1:6.2+dfsg-2ubuntu6.4\n  Candidate: 1:6.2+dfsg-2ubuntu6.5\n  Version table:\n     1:6.2+dfsg-2ubuntu6.5 500 (phased 30%)\n        500 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages\n *** 1:6.2+dfsg-2ubuntu6.4 100\n        100 /var/lib/dpkg/status\n     1:6.2+dfsg-2ubuntu6.2 500\n        500 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages\n     1:6.2+dfsg-2ubuntu6 500\n        500 http://archive.ubuntu.com/ubuntu jammy/universe amd64 Packages\n</code></pre> <p>In this case the update is only available for 30% of all users.</p>","tags":["Ubuntu"]},{"location":"unix/tools/apt.html#netselect-apt","title":"<code>netselect-apt</code>","text":"<p>A tool that finds the nearest and fastest mirror and creates a <code>source.list</code> file for this mirror.</p>","tags":["Ubuntu"]},{"location":"unix/tools/fun.html","title":"Fun Tools","text":"<p>A list of \"fun\" tools for Linux.</p>"},{"location":"unix/tools/fun.html#cowsay","title":"CowSay","text":"<ul> <li>piuccio/cowsay - cowsay is a configurable talking cow</li> <li>Code-Hex/Neo-cowsay - cowsay is reborn. Neo Cowsay has written in Go.</li> <li>MatteoGuadrini/dinosay - dinosay is a humble, simple, nice and paleolithic alternative to cowsay</li> <li>erkin/ponysay - Pony rewrite of cowsay</li> </ul>"},{"location":"unix/tools/fun.html#neofetch","title":"NeoFetch","text":"<ul> <li>dylanaraps/neofetch - A command-line system information tool written in bash</li> <li>Rosettea/bunnyfetch - Tiny system info fetch utility</li> <li>Dr-Noob/cpufetch - Simple yet fancy CPU architecture fetching tool</li> <li>List of fetch tools</li> </ul>"},{"location":"unix/tools/fun.html#misc","title":"Misc","text":"<ul> <li><code>aafire</code></li> <li><code>asciiquarium</code></li> <li>abishekvashok/cmatrix - Terminal based \"The Matrix\" like implementation</li> <li>gleich/ctree - A Christmas tree right from your terminal!</li> <li>busyloop/lolcat - Rainbows and unicorns!</li> <li>mtoyoda/sl - SL(1): Cure your bad habit of mistyping</li> </ul>"},{"location":"unix/tools/nvme.html","title":"NVME CLI","text":""},{"location":"unix/tools/nvme.html#general-usage","title":"General usage","text":"<pre><code>$ sudo nvme list\n</code></pre> <pre><code>$ sudo nvme smart-log /dev/nvme0n1\n</code></pre> <p>Device performance with <code>htparm</code>:</p> <pre><code>$ sudo hdparm -Tt --direct /dev/nvme0n1\n</code></pre>"},{"location":"unix/tools/nvme.html#update-firmware","title":"Update Firmware","text":"<p>Display available slots and installed firmware versions:</p> <pre><code>$ sudo nvme fw-log /dev/nvme0n1\nFirmware Log for device:nvme0n1\nafi  : 0x1\nfrs1 : 5B2QGXA7\n</code></pre> <p>Check if firmware update is supported and which slots are available:</p> <pre><code>$ sudo nvme id-ctrl -H /dev/nvme0n1 | grep Firmware\n  [9:9] : 0x1   Firmware Activation Notices Supported\n  [4:4] : 0x1   Firmware Activate Without Reset Supported\n  [3:1] : 0x3   Number of Firmware Slots\n  [0:0] : 0     Firmware Slot 1 Read/Write\n</code></pre> <p>Download firmware:</p> <pre><code>$ sudo nvme fw-download -f firmware.enc /dev/nvme0n1\n</code></pre> <p>Commit firmware to slot 2 without activation (<code>-a 0</code>):</p> <pre><code>$ sudo nvme fw-commit -s 2 -a 0 /dev/nvme0n1\n</code></pre> <p>Check with <code>nwme fw-log</code> if firmware is stored in slot 2. Than activate (<code>-a 2</code>) the firmware in slot 2.</p> <pre><code>$ sudo nvme fw-commit -s 2 -a 2 /dev/nvme0n1\n</code></pre>"},{"location":"unix/tools/nvme.html#samsung-firmware","title":"Samsung Firmware","text":"<p>https://semiconductor.samsung.com/consumer-storage/support/tools/</p>"},{"location":"unix/tools/smartmontools.html","title":"smartmontools","text":"<ul> <li>smartmontools</li> <li>smartctl(8)</li> </ul>"},{"location":"unix/tools/smartmontools.html#get-information-about-device","title":"Get information about device","text":"<p>Scan for devices:</p> <pre><code>sudo smartctl --scan\n</code></pre> <p>In order to check if the device supports SMART and if SMART is enabled, use option <code>--info</code> or <code>-i</code>:</p> <pre><code>sudo smartctl --info /dev/sda\n</code></pre> <p>If the device is not in the smartctl database, update the database with:</p> <pre><code>sudo /usr/sbin/update-smart-drivedb\n</code></pre>"},{"location":"unix/tools/smartmontools.html#enable-smart","title":"Enable SMART","text":"<pre><code>sudo smartctl --smart=on --offlineauto=on --saveauto=on /dev/sda\n</code></pre>"},{"location":"unix/tools/smartmontools.html#get-the-capabilities-of-the-device","title":"Get the capabilities of the device","text":"<p>Get the capabilities of the device with option <code>--capabilities</code> or <code>-c</code>:</p> <pre><code>sudo smartctl --capabilities /dev/sda\n</code></pre>"},{"location":"unix/tools/smartmontools.html#print-the-health-status","title":"Print the health status","text":"<p>Get the health status of the device with option <code>--health</code> or <code>-H</code>:</p> <pre><code>sudo smartctl --health /dev/sda\n</code></pre>"},{"location":"unix/tools/smartmontools.html#dump-all-information-about-the-device","title":"Dump all information about the device","text":"<p>To get all SMART information about the device with option <code>--all</code> or <code>-a</code>:</p> <pre><code>sudo smartctl --all /dev/sda\n</code></pre> <p>Get all the information above and all non-SMART information about the device with option <code>--xall</code> or <code>-x</code>:</p> <pre><code>sudo smartctl --xall /dev/sda\n</code></pre>"},{"location":"unix/tools/smartmontools.html#print-error-log","title":"Print error log","text":"<p>Print device error log with option <code>--log=error</code> or <code>-l error</code>:</p> <pre><code>sudo smartctl --log=error /dev/sda\n</code></pre>"},{"location":"unix/tools/smartmontools.html#performing-self-tests","title":"Performing self tests","text":"<p>Start self test with option <code>--test</code> or <code>-t</code>:</p> <pre><code>sudo smartctl --test=long /dev/sda\n</code></pre> <p>Get results of test:</p> <pre><code>sudo smartctl --log=selftest /dev/sda\n</code></pre>"},{"location":"unix/tools/smartmontools.html#access-disks-in-raid-system","title":"Access disks in RAID system","text":""},{"location":"unix/tools/smartmontools.html#megaraid","title":"MegaRAID","text":"<p>Get list of disk in RAID:</p> <pre><code>sudo /opt/MegaRAID/storcli/storcli64 /c0 /eall /sall show\n</code></pre> <p>Use the <code>DID</code> as disk number in the <code>smartctl</code> command:</p> <pre><code>sudo smartctl --info --device=megaraid,40 /dev/sda\n</code></pre>"},{"location":"unix/tools/tmux.html","title":"tmux","text":"<p>tmux is a terminal multiplexer.</p> <ul> <li> tmux/tmux</li> <li>tmux - wiki</li> <li>tmux(1)</li> </ul>","tags":["tmux"]},{"location":"unix/tools/tmux.html#scripting-with-tmux","title":"Scripting with tmux","text":"","tags":["tmux"]},{"location":"unix/tools/tmux.html#check-if-running-inside-a-tmux-session","title":"Check if running inside a tmux session","text":"<p>If tmux is version 3.2 or newer the environment variable <code>TERM_PROGRAM</code> is set:</p> <pre><code>if [ \"$TERM_PROGRAM\" = tmux ]\nthen\n  echo \"Inside a tmux session\"\nelse\n  echo \"Outside a tmux session\"\nfi\n</code></pre>","tags":["tmux"]},{"location":"unix/tools/tmux.html#send-keys","title":"send-keys","text":"<p>The command <code>send-keys</code> has the following syntax:</p> <pre><code>tmux send-keys -t '{session}:{window}.{pane}' {command} ENTER\n</code></pre> <p>The target can be shorted as <code>-t ':.!'</code>, which means:</p> <ul> <li>last active session</li> <li>last active window</li> <li>previously selected pane</li> </ul> <p>Usage with <code>new-window</code>:</p> <pre><code>tmux new-window -c \"${dir}\" -n \"${name}\"\ntmux send-keys -t ':.' \"${EDITOR}\" ENTER\n</code></pre> <p>Usage with <code>new-session</code>:</p> <pre><code>tmux new-session -d\ntmux send-keys -t ':.' \"${EDITOR}\" ENTER\ntmux attach-session -t \":\"\n</code></pre>","tags":["tmux"]},{"location":"unix/tools/tmux.html#current-special-key-bindings","title":"Current special key bindings","text":"<ul> <li>Ctrl+A V - split pane vertically (same directory)</li> <li>Ctrl+A H - split pane horizontally (same directory)</li> </ul>","tags":["tmux"]},{"location":"unix/truenas/index.html","title":"TrueNAS","text":"<ul> <li>https://www.truenas.com/docs/scale/scaletutorials/virtualization/accessingnasfromvm/</li> </ul>","tags":["TrueNAS"]},{"location":"unix/ubuntu/index.html","title":"Ubuntu","text":"","tags":["Ubuntu"]},{"location":"unix/virtualization/index.html","title":"Virtualization","text":""},{"location":"unix/virtualization/proxmox/index.html","title":"Proxmox","text":"","tags":["Proxmox"]},{"location":"unix/virtualization/proxmox/terminal.html","title":"Terminal Access","text":"","tags":["Proxmox"]},{"location":"unix/virtualization/proxmox/terminal.html#connect-to-serial-console","title":"Connect to serial console","text":"<p>Check if terminal is available in guest:</p> <pre><code>$ qm monitor 1500\nEntering Qemu Monitor for VM 1500 - type 'help' for help\nqm&gt; info chardev\n...\nserial0: filename=disconnected:unix:/var/run/qemu-server/1500.serial0,server=on\nqm&gt;\n</code></pre> <p>Starting a connection to serial console:</p> <pre><code>$ qm terminal 1500\nstarting serial terminal on interface serial0 (press control-O to exit)\n</code></pre> <p>Stop the connection with ++Ctrl+o++.</p>","tags":["Proxmox"]},{"location":"unix/virtualization/proxmox/terminal.html#switch-to-console-terminal-via-qemu","title":"Switch to console terminal via QEMU","text":"<p>To switch to a virtual console, you can: * Go to <code>Monitor</code> of the virtual machine in the Web front-end and   use the command <code>sendkey ctrl-alt-fN</code>. * Use <code>qm sendkey vmid \"sendkey-ctrl-alt-fN\"</code> in the shell.</p> <ul> <li>Ctrl+Alt+F1 - graphical login screen</li> <li>Ctrl+Alt+F2 - graphical desktop</li> <li>Ctrl+Alt+F3 - console 3</li> <li>...</li> <li>Ctrl+Alt+F6 - console 6</li> </ul>","tags":["Proxmox"]},{"location":"unix/virtualization/proxmox/terminal.html#switch-to-console-terminal-via-chvt","title":"Switch to console terminal via <code>chvt</code>","text":"<p>The command <code>chvt N</code> switch to the virtual console <code>N</code>. For example:</p> <pre><code>$ sudu chvt 3\n</code></pre>","tags":["Proxmox"]},{"location":"windows/index.html","title":"Windows","text":"","tags":["Windows"]},{"location":"windows/index.html#windows-updates","title":"Windows Updates","text":"<p>Get stand-alone update packages directly from Microsoft.</p> <p>Get information about current running Windows:</p> <pre><code>PS&gt; (Get-ComputerInfo).OSVersion\n10.0.19044\n</code></pre> <p>Explanation of the number can be found here.</p> <p>Get the Window Update Build Revision (UBR):</p> <pre><code>PS&gt; (Get-ComputerInfo).UBR\n2251\n</code></pre> <p>Get list of installed updates:</p> <pre><code>PS&gt; Get-HotFix | Sort-Object InstalledOn -Descending\n</code></pre>","tags":["Windows"]},{"location":"windows/index.html#check-windows-version","title":"Check Windows Version","text":"<pre><code>if ((Get-CimInstance -ClassName Win32_OperatingSystem).Caption -like \"Microsoft Windows 10*\")\n{\n  Write-Host \"Windows 10\"\n}\nelse\n{\n  Write-Host \"Windows 11\"\n}\n</code></pre>","tags":["Windows"]},{"location":"windows/tools/index.html","title":"Windows - Tools","text":"<ul> <li>BitLocker</li> <li><code>winget</code></li> <li>Windows Terminal</li> </ul>","tags":["Windows"]},{"location":"windows/tools/index.html#command-line-or-powershell","title":"Command Line or PowerShell","text":"<ul> <li> lptstr/winfetch - Like Neofetch, but for Windows</li> </ul>","tags":["Windows"]},{"location":"windows/tools/index.html#todo","title":"TODO","text":"<p>Put this tools into a list, that can be installed via <code>winget</code>. Merge this with the automated installation repository.</p> <ul> <li>gsudo</li> <li>OpenSSH Beta</li> <li>vim</li> <li>git</li> <li>GnuPG</li> <li>gpg3win</li> <li>OhMyPosh</li> <li>PowerShell</li> </ul> <ul> <li>Notepad++</li> <li>SumatraPDF</li> <li>nomacs</li> <li>Jitsi.Meet</li> </ul>","tags":["Windows"]},{"location":"windows/tools/bitlocker.html","title":"BitLocker","text":"<p>BitLocker is a proprietary volume encryption tool includes in Microsoft Windows. Without any configuration BitLocker using TPM. When using TPM on start of the computer no password needs to be entered.</p> <p>The command line command manage-bde can be used to turn on BitLocker and monitor the current status.</p>"},{"location":"windows/tools/bitlocker.html#configure","title":"Configure","text":"<p>BitLocker can be configured through group policies or directly with registry keys.</p> <p>Info</p> <p>This configuration settings requires at least Windows 10, older versions of Windows use different options.</p>"},{"location":"windows/tools/bitlocker.html#group-policies","title":"Group  Policies","text":"<p>The group policies are changed in the domain controller or locally via <code>gpedit.msc</code>.</p>"},{"location":"windows/tools/bitlocker.html#use-without-tpm","title":"Use without TPM","text":"<p>To enable password protected volume encryption the following group policy needs to be enabled (see admx.help):</p> <ul> <li><code>Computers Configuration</code><ul> <li><code>Policies</code> &gt; <code>Administrative Templates</code> &gt; <code>Windows Components</code><ul> <li><code>BitLocker Drive Encryption</code><ul> <li><code>Operating System Drives</code><ul> <li><code>Require additional authentication at startup</code>: <code>Enable</code><ul> <li><code>Allow BitLocker without a compatible TPM (requires a password or a startup key on a USB flash drive)</code>: <code>Checked</code></li> <li><code>Configure TPM startup</code>: <code>Do not allow TPM</code>\u0013</li> <li><code>Configure TPM startup PIN</code> : <code>Do not allow startup PIN with TPM</code></li> <li><code>Configure TPM startup key</code>: <code>Do not allow startup key with TPM</code></li> <li><code>Configure TPM startup key and PIN</code>: <code>Do not allow startup key and PIN with TPM</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"windows/tools/bitlocker.html#enable-better-encryption","title":"Enable better encryption","text":"<p>To use 256-bit AES encryption instead of the 128-bit default, the following group policies must be defined (see admx.help):</p> <ul> <li><code>Computers Configuration</code><ul> <li><code>Policies</code> &gt; <code>Administrative Templates</code> &gt; <code>Windows Components</code><ul> <li><code>BitLocker Drive Encryption</code><ul> <li><code>Choose drive encryption method and cipher strength (Windows 10 [Version 1511] and later)</code><ul> <li><code>Select the encryption method for operating system drives</code>: <code>XTS-AES 256-bit</code></li> <li><code>Select the encryption method for fixed data drives</code>: <code>XTS-AES 256-bit</code></li> <li><code>Select the encryption method for removable data drives</code>: <code>XTS-AES 256-bit</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"windows/tools/bitlocker.html#registry-settings","title":"Registry Settings","text":""},{"location":"windows/tools/bitlocker.html#use-without-tpm_1","title":"Use without TPM","text":"<p>To enable password protected volume encryption the following registry entries need to be defined:</p> <p><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\FVE</code></p> <ul> <li><code>UseAdvancedStartup</code>: <code>DWORD:1</code></li> <li><code>EnableBDEWithNoTPM</code>: <code>DWORD:1</code></li> <li><code>UseTPM</code>: <code>DWORD:0</code></li> <li><code>UseTPMPIN</code>: <code>DWORD:0</code></li> <li><code>UseTPMKey</code>: <code>DWORD:0</code></li> <li><code>UseTPMKeyPIN</code>: <code>DWORD:0</code></li> </ul>"},{"location":"windows/tools/bitlocker.html#enable-better-encryption_1","title":"Enable better encryption","text":"<p>To use 256-bit AES encryption instead of the 128-bit default, the following registry entries must be defined:</p> <p><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\FVE</code></p> <ul> <li><code>EncryptionMethodWithXtsOs</code>: <code>DWORD:7</code></li> <li><code>EncryptionMethodWithXtsFdv</code>: <code>DWORD:7</code></li> <li><code>EncryptionMethodWithXtsRdv</code>: <code>DWORD:4</code></li> </ul>"},{"location":"windows/tools/bitlocker.html#enable-encryption","title":"Enable encryption","text":"<p>Enable BitLocker with a password (must be at least 8 characters):</p> <pre><code>PS&gt; manage-bde.exe -on C: -password\n</code></pre> <p>Using abbreviations:</p> <pre><code>PS&gt; manage-bde.exe -on C: -pw\n</code></pre> <p>To enable the encryption, the computer needs to be restarted: <code>shutdown /r /t 0</code>.</p> <p>Warning</p> <p>The keyboard layout can be different during password prompt of BitLocker. Therefore be prepared, if the password is misspelled that you used a key that has a different mapping.</p> <p>Info</p> <p>If the keyboard layout is different or you misspelled the password press ++ESC++ to boot without BitLocker enabled. The password needs to be set again.</p>"},{"location":"windows/tools/bitlocker.html#check-status","title":"Check status","text":"<p>After first successful restart, the encryption of the volume is starting. The current progress can be monitored with:</p> <pre><code>PS&gt; manage-bde.exe -status C:\nBitLocker Drive Encryption: Configuration Tool version 10.0.22621\nCopyright (C) 2013 Microsoft Corporation. All rights reserved.\n\nVolume C: [Windows]\n[OS Volume]\n\n    Size:                 69,13 GB\n    BitLocker Version:    2.0\n    Conversion Status:    Used Space Only Encrypted\n    Percentage Encrypted: 100,0%\n    Encryption Method:    AES 256\n    Protection Status:    Protection On\n    Lock Status:          Unlocked\n    Identification Field: Unknown\n    Key Protectors:\n        Password\n</code></pre>"},{"location":"windows/tools/bitlocker.html#add-numerical-password-as-fallback","title":"Add Numerical Password (as Fallback)","text":"<p>The numerical password is enabled with the following command:</p> <pre><code>PS&gt; manage-pde -protectors -add C: -recoverypassword\n</code></pre> <p>or by using abbreviations:</p> <pre><code>PS&gt; manage-bde.exe -protectors -add C: -rp\n</code></pre> <p>To get the protector methods:</p> <pre><code>PS&gt; manage-bde.exe -protectors -get C:\nBitLocker Drive Encryption: Configuration Tool version 10.0.22621\nCopyright (C) 2013 Microsoft Corporation. All rights reserved.\n\nVolume C: [Windows]\nAll Key Protectors\n\n    Numerical Password:\n      ID: {89701158-94B4-42D2-87EB-82B8A03E45CD}\n      Password:\n        463881-116138-212971-219626-306295-227139-146784-038038\n\n    Password:\n      ID: {B1129007-8A8C-4398-BC67-0F608F771ABD}\n</code></pre> <p>The <code>RecoveryPassword</code> is called numerical password and the value is visible. Please store this recovery password in case you forget your password.</p>"},{"location":"windows/tools/bitlocker.html#change-password","title":"Change Password","text":"<p>The password can only be changed if a secondary protector is enabled (i.e., a numerical recovery password):</p> <pre><code>PS&gt; manage-pde -changepassword C:\n</code></pre>"},{"location":"windows/tools/bitlocker.html#script","title":"Script","text":"<p>The following PowerShell script enable BitLocker on <code>C:</code>:</p> <pre><code>if ((Get-BitLockerVolume C:).EncryptionMethod -ne \"None\") {\n  Write-Host \"\"\n  Write-Host \"Volume C: is already encrypted\" -ForegroundColor red\n  Get-BitLockerVolume C: | Select-Object *\n  Write-Host \"Disable BitLocker: \" -NoNewLine\n  Write-Host \"Disable-BitLocker -MountPoint C:\" -ForegroundColor yellow\n  Exit 1\n}\n\nfunction Set-RegistryProperty {\n  Param (\n    [Parameter(Mandatory=$True, Position=0)]\n    [String] $Path,\n    [Parameter(Mandatory=$True, Position=1)]\n    [String] $Name,\n    [Parameter(Mandatory=$True, Position=2)]\n    [String] $Type,\n    [Parameter(Mandatory=$True, Position=3)]\n    [Object] $Value\n  )\n\n  if (-not (Test-Path $Path)) {\n    New-Item -Path $Path -Force &gt; $null\n  }\n  if ((Get-Item $Path).Property -contains $Name) {\n    Set-ItemProperty -Path $Path -Name $Name `\n                     -Type $Type -Value $Value -Force &gt; $null\n  } else {\n    New-ItemProperty -Path $Path -Name $Name `\n                     -PropertyType $Type -Value $Value -Force &gt; $null\n  }\n}\n\nWrite-Host \"\"\nWrite-Host \"Configure Bitlocker without TPM and better encryption\"\n$properties = `\n  @{Name = 'UseAdvancedStartup';          Type = 'DWORD'; Value = 1}, `\n  @{Name = 'EnableBDEWithNoTPM';          Type = 'DWORD'; Value = 1}, `\n  @{Name = 'UseTPM';                      Type = 'DWORD'; Value = 0}, `\n  @{Name = 'UseTPMPIN';                   Type = 'DWORD'; Value = 0}, `\n  @{Name = 'UseTPMKey';                   Type = 'DWORD'; Value = 0}, `\n  @{Name = 'UseTPMKeyPIN';                Type = 'DWORD'; Value = 0}, `\n  @{Name = 'EncryptionMethodWithXtsOs';   Type = 'DWORD'; Value = 7}, `\n  @{Name = 'EncryptionMethodWithXtsFdv';  Type = 'DWORD'; Value = 7}, `\n  @{Name = 'EncryptionMethodWithXtsRdv';  Type = 'DWORD'; Value = 4}\n\nForEach ($property in $properties) {\n  Set-RegistryProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\FVE' `\n                       -Name $property.Name `\n                       -Type $property.Type -Value $property.Value\n}\n\nWrite-Host \"\"\nWrite-Host \"Activate Bitlocker\"\nEnable-BitLocker -MountPoint C: -PasswordProtector\nEnable-BitLocker -MountPoint C: -RecoveryPasswordProtector `\n                                -ErrorAction SilentlyContinue\n\nWrite-Host \"\"\nWrite-Host \"Reboot: \" -NoNewLine\nWrite-Host \"shutdown /r /t 0\" -ForegroundColor yellow\nWrite-Host \"\"\n</code></pre>"},{"location":"windows/tools/winget.html","title":"winget","text":"<p>Windows Package Manager CLI (aka <code>winget</code>) can be used to install/upgrade software on Windows via the command line.</p> <ul> <li> microsoft/winget-cli</li> <li>Microsoft Store - App-Installer</li> <li>Use the <code>winget</code> tool to install and manage applications</li> <li>winget @ SS64</li> </ul>","tags":["Windows"]},{"location":"windows/tools/winget.html#install","title":"Install","text":"<p>Download latest version from GitHub release page.</p> <p>Info</p> <p>The download a package with all dependencies you can use https://store.rg-adguard.net/.</p> <ul> <li>Go to Microsoft store</li> <li>Select the application</li> <li>Copy the URL</li> <li>Go to https://store.rg-adguard.net/</li> <li>Paste the URL</li> <li>Select on the right side 'Slow'</li> </ul> <p>Now you will see all packages inside this application.</p> <p>Install <code>winget</code> as a provisioned package:</p> <pre><code>PS&gt; Add-AppxProvisionedPackage\n        -PackagePath 'Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle'\n        -LicensePath '7bcb1a0ab33340daa57fa5b81faec616_License1.xml'\n        -DependencyPackagePath\n            'Microsoft.VCLibs.x64.14.00.Desktop.appx',\n            'Microsoft.UI.Xaml.2.7_7.2208.15002.0_x64__8wekyb3d8bbwe.appx'\n        -Online\n</code></pre> <p>Enable provisioned package for the current user:</p> <pre><code>(Get-AppxProvisionedPackage -Online |\n   Where-Object -Property DisplayName -EQ Microsoft.DesktopAppInstaller\n).InstallLocation | Add-AppxPackage -Register -DisableDevelopmentMode\n</code></pre> <p>The executable <code>winget.exe</code> is than found in <code>$env:USERPROFILE\\AppData\\Local\\Microsoft\\WindowsApps\\</code>.</p> <p>Warning</p> <p>If there are policies that does not allow Microsoft applications, the application <code>Microsoft.DesktopAppInstaller</code> must be whitelisted.</p>","tags":["Windows"]},{"location":"windows/tools/winget.html#searching-for-packages","title":"Searching for Packages","text":"<p>List all available packages:</p> <pre><code>PS&gt; winget search\n</code></pre> <p>Can also be seen at microsoft/winget-pkgs.</p> <p>List all packages that contains <code>note</code>:</p> <pre><code>PS&gt; winget search note\n</code></pre> <p>Display information about a package:</p> <pre><code>PS&gt; winget show notepad++\n</code></pre>","tags":["Windows"]},{"location":"windows/tools/winget.html#installing-a-package","title":"Installing a Package","text":"<p>Try to install all packages in machine scope (for all users):</p> <pre><code>PS&gt; winget install --scope machine --exact --id gerardog.gsudo\n</code></pre> <p>Therefore, the default scope should be <code>machine</code>. Change the default scope in the settings</p> <p>Some package can not be installed in machine scope:</p> <pre><code>PS&gt; winget install --scope user --exact --id Microsoft.WindowsTerminal\n</code></pre>","tags":["Windows"]},{"location":"windows/tools/winget.html#listing-package-repositories","title":"Listing Package Repositories","text":"<pre><code>PS&gt; winget source list\n</code></pre>","tags":["Windows"]},{"location":"windows/tools/winget.html#upgrading-packages","title":"Upgrading Packages","text":"<p>To get a list of upgradeable packages:</p> <pre><code>PS&gt; winget upgrade\n</code></pre> <p>To upgrade a package:</p> <pre><code>PS&gt; winget upgrade Notepad++.Notepad++\n</code></pre>","tags":["Windows"]},{"location":"windows/tools/winget.html#configuration-settings","title":"Configuration Settings","text":"<p>To open the settings in an editor:</p> <pre><code>PS&gt; winget settings\n</code></pre> <p>The settings (documentation on these settings):</p> <pre><code>{\n    \"$schema\": \"https://aka.ms/winget-settings.schema.json\",\n\n    \"visual\": {\n        \"progressBar\": \"rainbow\"\n    },\n    \"installBehavior\": {\n        \"preferences\": {\n            \"scope\": \"machine\"\n        }\n    },\n    \"source\": {\n        \"autoUpdateIntervalInMinutes\": 5\n    }\n}\n</code></pre> <ul> <li><code>progressBar</code>: <code>accent</code> or <code>rainbow</code></li> <li><code>scope</code>: <code>user</code> or <code>machine</code></li> </ul>","tags":["Windows"]},{"location":"windows/tools/wt.html","title":"Windows Terminal","text":"","tags":["Windows"]},{"location":"windows/tools/wt.html#install","title":"Install","text":"<p>microsoft/terminal</p> <p>Download the latest release from https://github.com/microsoft/terminal/releases/latest</p> <p>Install the MSIXBundle by starting a PowerShell with administratior rights:</p> <pre><code>PS&gt; Add-AppxPackage Microsoft.WindowsTerminal_1.2.2381.0_8wekyb3d8bbwe.msixbundle\n</code></pre> <p>Or install via <code>winget</code>:</p> <pre><code>PS&gt; winget install \"Windows Terminal\"\n</code></pre>","tags":["Windows"]},{"location":"windows/tools/wt.html#configure","title":"Configure","text":"<p>Global configurations (<code>copyOnSelect</code> must be changed):</p> <pre><code>{\n\u00a0 \u00a0 \"disabledProfileSources\": [ \"Windows.Terminal.Azure\" ],\n\u00a0 \u00a0 \"theme\": \"dark\",\n\u00a0 \u00a0 \"launchMode\": \"maximized\",\n\n    // If enabled, selections are automatically copied to your clipboard.\n    \"copyOnSelect\": true\n}\n</code></pre> <p>Default settings for all profiles:</p> <pre><code>{\n    \"profiles\":\n    {\n\u00a0 \u00a0 \u00a0 \u00a0 \"defaults\":\n\u00a0 \u00a0 \u00a0 \u00a0 {\n            \"fontFace\": \"Hack NF\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"fontSize\" : 14,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cursorShape\": \"filledBox\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"colorScheme\": \"Tomorrow Night\"\n\u00a0 \u00a0 \u00a0 \u00a0 },\n        \"list\":\n        [\n        ]\n    }\n}\n</code></pre> <p>Add Cygwin bash:</p> <pre><code>            {\n                \"guid\": \"{a1f2ceb2-795d-4f2a-81cc-723cceec49c0}\",\n                \"name\": \"Cygwin bash\",\n                \"commandline\": \"C:/cygwin/bin/bash.exe -i -l\",\n                \"icon\": \"C:/cygwin/Cygwin-Terminal.ico\",\n                \"hidden\": false\n            },\n</code></pre> <p>Add <code>startingDirectory</code> for all WSL entries:</p> <pre><code>      {\n                \"startingDirectory\": \"//wsl$/Ubuntu-20.04/home/ti5cw\"\n      }\n</code></pre> <p>Define the Tomorrow Night color theme:</p> <pre><code>{\n\u00a0 \u00a0 \"schemes\": [\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"Tomorrow Night\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"black\": \"#000000\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"red\": \"#cc6666\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"green\": \"#b5bd68\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"yellow\": \"#f0c674\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"blue\": \"#81a2be\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"purple\": \"#b294bb\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cyan\": \"#8abeb7\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"white\": \"#ffffff\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightBlack\": \"#000000\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightRed\": \"#cc6666\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightGreen\": \"#b5bd68\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightYellow\": \"#f0c674\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightBlue\": \"#81a2be\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightPurple\": \"#b294bb\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightCyan\": \"#8abeb7\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"brightWhite\": \"#ffffff\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"background\": \"#1d1f21\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"foreground\": \"#c5c8c6\"\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 ]\n}\n</code></pre> <p>Change keyboard shortcuts:</p> <pre><code>{\n    \"actions\":\n    [\n        // Change binding from Ctrl+= to Ctrl+\u00df\n        { \"command\": { \"action\": \"adjustFontSize\", \"delta\": 1 }, \"keys\": \"ctrl+\u00df\" }\n    ]\n}\n</code></pre>","tags":["Windows"]},{"location":"windows/tools/wt.html#shortcuts","title":"Shortcuts","text":"<ul> <li>Copy: Ctrl+Shift+C</li> <li>Paste: Ctrl+Shift+V</li> <li>Find: Ctrl+Shift+F</li> </ul> <ul> <li>Toggle fullscreen: Alt+Enter</li> <li>Scroll up: Ctrl+Shift+Up / Ctrl+Shift+Page Up</li> <li>Scroll down: Ctrl+Shift+Down / Ctrl+Shift+Page Down</li> </ul> <ul> <li>Increase Font Size: Ctrl+.</li> <li>Decrease Font Size: Ctrl+-</li> <li>Reset Font Size: Ctrl+0</li> </ul> <ul> <li>New Tab: Ctrl+Shift+T</li> <li>New Tab with specific Profile:<ul> <li>Ctrl+Shift+1</li> <li>Ctrl+Shift+2</li> <li>...</li> </ul> </li> <li>Move between Tabs:<ul> <li>Ctrl+Tab</li> <li>Ctrl+Shift+Tab</li> </ul> </li> <li>Open spefic Tab:<ul> <li>Ctrl+Alt+1</li> <li>Ctrl+Alt+2</li> <li>...</li> </ul> </li> </ul> <ul> <li>New Pane: Alt+Shift+D</li> <li>Split Pane horizontal: Alt+Shift+-</li> <li>Split Pane vertical: Alt+Shift++</li> <li>Switch between Panes:<ul> <li>Alt+Up </li> <li>Alt+Down </li> <li>Alt+Left </li> <li>Alt+Right</li> </ul> </li> <li>Resize current Pane:<ul> <li>Alt+Shift+Up </li> <li>Alt+Shift+Down </li> <li>Alt+Shift+Left </li> <li>Alt+Shift+Right</li> </ul> </li> </ul> <ul> <li>Close current Pane: Ctrl+Shift+W</li> <li>Close Window: Alt+F4</li> </ul>","tags":["Windows"]},{"location":"writing/index.html","title":"Writing","text":"<ul> <li>MkDocs Material</li> </ul>"},{"location":"writing/latex/truetype-fonts.html","title":"TrueType Fonts","text":"<p>http://tug.ctan.org/tex-archive/info/german/MiKTeX-WinEdt-TrueType-Anleitung/ttf.htm</p>"},{"location":"writing/mkdocs/index.html","title":"Material for MkDocs","text":"<ul> <li>MkDocs<ul> <li> mkdocs/mkdocs</li> <li>https://www.mkdocs.org/</li> </ul> </li> <li>Material for MkDocs<ul> <li> squidfunk/mkdocs-material</li> <li>https://squidfunk.github.io/mkdocs-material/</li> </ul> </li> <li>Additional Extensions or Plugins<ul> <li>Extensions for Python Markdown<ul> <li> facelessuser/pymdown-extensions</li> <li>https://facelessuser.github.io/pymdown-extensions/</li> </ul> </li> <li>MkDocs Awesome Pages Plugin<ul> <li> lukasgeiter/mkdocs-awesome-pages-plugin </li> </ul> </li> </ul> </li> </ul>"},{"location":"writing/mkdocs/admontion.html","title":"Admonition","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/admonitions/</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/details/</li> </ul>"},{"location":"writing/mkdocs/admontion.html#setup","title":"Setup","text":"<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n</code></pre>"},{"location":"writing/mkdocs/admontion.html#examples","title":"Examples","text":"Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>With title</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>abstract summary tldr</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>info todo</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>tip hint important</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>success check done</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>question help faq</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>warning caution attention</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>failure fail missing</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>danger error</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Bug</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>example snippet</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>quote site</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"writing/mkdocs/definition.html","title":"Definition List","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/lists/#definition-list</li> </ul>"},{"location":"writing/mkdocs/definition.html#setup","title":"Setup","text":"<pre><code>markdown_extensions:\n  - def_list\n</code></pre>"},{"location":"writing/mkdocs/definition.html#examples","title":"Examples","text":"<code>Lorem ipsum dolor sit amet</code> Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus   tellus non sem sollicitudin, quis rutrum leo facilisis. <code>Cras arcu libero</code> Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin   ut eros sed sapien ullamcorper consequat. Nunc ligula ante.<p>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.   Nam vulputate tincidunt fringilla.   Nullam dignissim ultrices urna non auctor.</p>"},{"location":"writing/mkdocs/formatting.html","title":"Formatting","text":""},{"location":"writing/mkdocs/formatting.html#critic","title":"Critic","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/formatting/#highlighting-changes</li> <li>https://squidfunk.github.io/mkdocs-material/setup/extensions/python-markdown-extensions/#critic</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/critic/</li> <li>CriticMarkup/CriticMarkup-toolkit</li> </ul>"},{"location":"writing/mkdocs/formatting.html#setup","title":"Setup","text":"<pre><code>markdown_extensions:\n  - pymdownx.critic:\n      mode: view\n</code></pre>"},{"location":"writing/mkdocs/formatting.html#examples","title":"Examples","text":"<ul> <li>Addition add</li> <li>Deletion del</li> <li>Substitution oldnew </li> <li>Comment comment</li> <li>Highlight highlight</li> </ul> <p>Highlight a complete paragraph</p>"},{"location":"writing/mkdocs/formatting.html#caret-mark-tilde","title":"Caret, Mark &amp; Tilde","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/formatting/#highlighting-text</li> <li>https://squidfunk.github.io/mkdocs-material/setup/extensions/python-markdown-extensions/#caret-mark-tilde</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/caret/</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/mark/</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/tilde/</li> </ul>"},{"location":"writing/mkdocs/formatting.html#setup_1","title":"Setup","text":"<pre><code>markdown_extensions:\n  - pymdownx.caret\n  - pymdownx.mark\n  - pymdownx.tilde\n</code></pre>"},{"location":"writing/mkdocs/formatting.html#example","title":"Example","text":"<ul> <li>This was marked</li> <li>This was inserted</li> <li>This was deleted</li> </ul>"},{"location":"writing/mkdocs/formatting.html#keyboard","title":"Keyboard","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/formatting/#adding-keyboard-keys</li> <li>https://squidfunk.github.io/mkdocs-material/setup/extensions/python-markdown-extensions/#keys</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/keys/</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/keys/#key-map-index</li> </ul>"},{"location":"writing/mkdocs/formatting.html#setup_2","title":"Setup","text":"<pre><code>markdown_extensions:\n  - pymdownx.keys\n</code></pre>"},{"location":"writing/mkdocs/formatting.html#examples_1","title":"Examples","text":"<ul> <li><code>++space++</code>: Space</li> <li><code>++return++</code>: Enter</li> <li><code>++ctrl+c++</code>: Ctrl+C</li> <li><code>++alt+a++</code>: Alt+A</li> <li><code>++shift+up++</code>: Shift+Up</li> <li><code>++windows+page-up++</code>: Win+Page Up</li> </ul>"},{"location":"writing/mkdocs/icons.html","title":"Icons &amp; Emojis","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/icons-emojis/</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/emoji/</li> </ul>"},{"location":"writing/mkdocs/icons.html#setup","title":"Setup","text":"<pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre>"},{"location":"writing/mkdocs/icons.html#examples","title":"Examples","text":"<p>There is a search in all available icons under https://squidfunk.github.io/mkdocs-material/reference/icons-emojis/.</p> <p>Available Icons/Emojis:</p> <ul> <li> https://materialdesignicons.com/<ul> <li><code>:material-account-circle:</code> - </li> </ul> </li> <li> https://fontawesome.com/<ul> <li><code>:fontawesome-regular-face-laugh-wink:</code> - </li> </ul> </li> <li> https://primer.style/octicons/<ul> <li><code>:octicons-verified-24:</code> - </li> </ul> </li> <li> https://simpleicons.org/<ul> <li><code>:simple-ubuntu:</code> - </li> </ul> </li> </ul>"},{"location":"writing/mkdocs/images.html","title":"Images / Badges","text":""},{"location":"writing/mkdocs/images.html#examples","title":"Examples","text":"<p>Foobar  Foobar</p>"},{"location":"writing/mkdocs/magiclink.html","title":"Magic Link","text":"<ul> <li>https://facelessuser.github.io/pymdown-extensions/extensions/magiclink/</li> </ul>"},{"location":"writing/mkdocs/magiclink.html#setup","title":"Setup","text":"<pre><code>extra_css:\n  - assets/css/extra-5ee9fa49a5.css\n\nmarkdown_extension:\n  - pymdownx.magiclink:\n      repo_url_shortener: true\n      repo_url_shorthand: true\n</code></pre>"},{"location":"writing/mkdocs/markdown.html","title":"Markdown","text":""},{"location":"writing/mkdocs/markdown.html#emphasis","title":"Emphasis","text":"<p>is*bold*is is_bold_is is**bold**is is__bold__is is***bold***is is___bold___is</p> <ul> <li>Bold<ul> <li>is Bold</li> <li>is Bold</li> </ul> </li> <li>Italic<ul> <li>is Italic</li> <li>is Italic</li> </ul> </li> <li>Bold &amp; Italic<ul> <li>is Bold &amp; Italic</li> <li>is Bold &amp; Italic</li> </ul> </li> </ul>"},{"location":"writing/mkdocs/markdown.html#table","title":"Table","text":"A B C A B C AA BB CC AAA BBB CCC"},{"location":"writing/mkdocs/markdown.html#nested-lists","title":"Nested Lists","text":""},{"location":"writing/mkdocs/markdown.html#setup","title":"Setup","text":"<p>Using Mdx Truly Sane Lists.</p> <p>Needs to be added into <code>requirements.txt</code>: <code>mdx_truly_sane_lists</code></p> <pre><code>markdown_extensions:\n  - mdx_truly_sane_lists:\n      nested_indent: 2\n      truly_sane: true\n</code></pre>"},{"location":"writing/mkdocs/markdown.html#example","title":"Example","text":"<p>GitHub indention</p> LayoutMarkdown <ul> <li>Level 1 (GitHub)<ul> <li>Level 2<ul> <li>Level 3</li> </ul> </li> <li>Level 2</li> </ul> </li> </ul> <pre><code>* Level 1 (GitHub)\n  * Level 2\n    * Level 3\n  * Level 2\n</code></pre> <p>Standard indention</p> LayoutMarkdown <p>Standanrd indention is not valid any more.</p> <ul> <li>Level 1 (Standard)     * Level 2         * Level 3     * Level 2</li> </ul> <pre><code>* Level 1 (Standard)\n    * Level 2\n        * Level 3\n    * Level 2\n</code></pre>"},{"location":"writing/mkdocs/mermaid.html","title":"Mermaid","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/diagrams/</li> </ul>"},{"location":"writing/mkdocs/mermaid.html#setup","title":"Setup","text":"<pre><code>markdown_extension:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre>"},{"location":"writing/mkdocs/mermaid.html#examples","title":"Examples","text":"<pre><code>graph TD;\nA --&gt; B;\nA --&gt; C;\nB --&gt; D;\nC --&gt; D;</code></pre> <pre><code>graph TD\nA[Hard] --&gt;|Text| B(Round)\nB --&gt; C{Decision}\nC --&gt;|One| D[Result 1]\nC --&gt;|Two| E[Result 2]</code></pre>"},{"location":"writing/mkdocs/source.html","title":"Source","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/code-blocks/</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/highlight/</li> </ul>"},{"location":"writing/mkdocs/source.html#setup","title":"Setup","text":"<pre><code>theme:\n  features:\n    - content.code.annotate # (1)!\n    - content.code.copy # (2)!\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <ol> <li>Important for code annotations</li> <li>Enable code copy button</li> </ol>"},{"location":"writing/mkdocs/source.html#examples","title":"Examples","text":"<p>Code with highlighting:</p> <pre><code>def example(param):\n    print(f'param = {param}')\n</code></pre> <p>Using snippets:</p> LayoutMarkdown hello_world.c<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\n/*\n * Hello World\n */\nint main(int argc, char *argv[]) {\n  int a = 5;\n  int b = 4.3;\n\n  printf(\"Hello World!\\n\");\n\n  return EXIT_SUCCESS;\n}\n</code></pre> <pre><code>``` c title=\"hello_world.c\"\n--8&lt;-- \"writing/mkdocs/hello_world.c\"\n```\n</code></pre> <p>The filename is under the directory <code>base_path</code> configured in <code>mkdocs.yaml</code>:</p> <pre><code>markdown_extensions:\n  - pymdownx.snippets:\n      base_path: snippets/\n</code></pre> <p>The directory should be outside of <code>docs/</code>.</p> <p>More examples can be found in the documentation.</p> <p>Using annotations:</p> LayoutMarkdown <pre><code>// Simple example\nint main(int argc, char* argv[])\n{\n  int a = 42; // The answer (1)\n  return EXIT_SUCCESS; // (2)!\n}\n</code></pre> <ol> <li>to everything.</li> <li>Annotation with stripping comments</li> </ol> <pre><code>``` c\n// Simple example\nint main(int argc, char *argv[])\n{\n  int a = 42;          // The answer (1)\n  return EXIT_SUCCESS; // (2)!\n```\n\n1.  to everthing\n2.  Annotation with stripping comments\n</code></pre> <p>For each code annotation a link can be set (example).</p>"},{"location":"writing/mkdocs/task.html","title":"Task List","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/lists/#tasklist</li> <li>https://facelessuser.github.io/pymdown-extensions/extensions/tasklist/</li> </ul>"},{"location":"writing/mkdocs/task.html#setup","title":"Setup","text":"<pre><code>markdown_extensions:\n  - pymdownx.tasklist:\n      custom_checkbox: true\n</code></pre>"},{"location":"writing/mkdocs/task.html#examples","title":"Examples","text":"<ul> <li> foo<ul> <li> bar</li> <li> baz</li> </ul> </li> <li> bim</li> </ul>"},{"location":"blog/archive/2023.html","title":"2023","text":""},{"location":"blog/category/tools.html","title":"Tools","text":""},{"location":"blog/category/unix.html","title":"UNIX","text":""},{"location":"blog/category/windows.html","title":"Windows","text":""},{"location":"blog/category/neovim.html","title":"Neovim","text":""},{"location":"blog/category/latex.html","title":"LaTeX","text":""},{"location":"tags.html","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags.html#homeassistant","title":"HomeAssistant","text":"<ul> <li>Home Assistent</li> <li>Devices</li> <li>Videos</li> </ul>"},{"location":"tags.html#proxmox","title":"Proxmox","text":"<ul> <li>Proxmox</li> <li>Terminal Access</li> </ul>"},{"location":"tags.html#truenas","title":"TrueNAS","text":"<ul> <li>TrueNAS</li> </ul>"},{"location":"tags.html#ubuntu","title":"Ubuntu","text":"<ul> <li>Advanced Package Tool (apt)</li> <li>Ubuntu</li> </ul>"},{"location":"tags.html#windows","title":"Windows","text":"<ul> <li>Windows</li> <li>Windows - Tools</li> <li>winget</li> <li>Windows Terminal</li> </ul>"},{"location":"tags.html#yaml","title":"YAML","text":"<ul> <li>YAML and bash</li> </ul>"},{"location":"tags.html#bash","title":"bash","text":"<ul> <li>bash</li> <li>YAML and bash</li> </ul>"},{"location":"tags.html#tmux","title":"tmux","text":"<ul> <li>tmux</li> </ul>"}]}